// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gauge.Messages {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxIOZ2F1Z2UubWVzc2FnZXMaCnNwZWMucHJvdG8i",
            "FAoSS2lsbFByb2Nlc3NSZXF1ZXN0IlgKF0V4ZWN1dGlvblN0YXR1c1Jlc3Bv",
            "bnNlEj0KD2V4ZWN1dGlvblJlc3VsdBgBIAEoCzIkLmdhdWdlLm1lc3NhZ2Vz",
            "LlByb3RvRXhlY3V0aW9uUmVzdWx0IlcKGEV4ZWN1dGlvblN0YXJ0aW5nUmVx",
            "dWVzdBI7ChRjdXJyZW50RXhlY3V0aW9uSW5mbxgBIAEoCzIdLmdhdWdlLm1l",
            "c3NhZ2VzLkV4ZWN1dGlvbkluZm8iVQoWRXhlY3V0aW9uRW5kaW5nUmVxdWVz",
            "dBI7ChRjdXJyZW50RXhlY3V0aW9uSW5mbxgBIAEoCzIdLmdhdWdlLm1lc3Nh",
            "Z2VzLkV4ZWN1dGlvbkluZm8iWwocU3BlY0V4ZWN1dGlvblN0YXJ0aW5nUmVx",
            "dWVzdBI7ChRjdXJyZW50RXhlY3V0aW9uSW5mbxgBIAEoCzIdLmdhdWdlLm1l",
            "c3NhZ2VzLkV4ZWN1dGlvbkluZm8iWQoaU3BlY0V4ZWN1dGlvbkVuZGluZ1Jl",
            "cXVlc3QSOwoUY3VycmVudEV4ZWN1dGlvbkluZm8YASABKAsyHS5nYXVnZS5t",
            "ZXNzYWdlcy5FeGVjdXRpb25JbmZvIl8KIFNjZW5hcmlvRXhlY3V0aW9uU3Rh",
            "cnRpbmdSZXF1ZXN0EjsKFGN1cnJlbnRFeGVjdXRpb25JbmZvGAEgASgLMh0u",
            "Z2F1Z2UubWVzc2FnZXMuRXhlY3V0aW9uSW5mbyJdCh5TY2VuYXJpb0V4ZWN1",
            "dGlvbkVuZGluZ1JlcXVlc3QSOwoUY3VycmVudEV4ZWN1dGlvbkluZm8YASAB",
            "KAsyHS5nYXVnZS5tZXNzYWdlcy5FeGVjdXRpb25JbmZvIlsKHFN0ZXBFeGVj",
            "dXRpb25TdGFydGluZ1JlcXVlc3QSOwoUY3VycmVudEV4ZWN1dGlvbkluZm8Y",
            "ASABKAsyHS5nYXVnZS5tZXNzYWdlcy5FeGVjdXRpb25JbmZvIlkKGlN0ZXBF",
            "eGVjdXRpb25FbmRpbmdSZXF1ZXN0EjsKFGN1cnJlbnRFeGVjdXRpb25JbmZv",
            "GAEgASgLMh0uZ2F1Z2UubWVzc2FnZXMuRXhlY3V0aW9uSW5mbyK4AQoNRXhl",
            "Y3V0aW9uSW5mbxItCgtjdXJyZW50U3BlYxgBIAEoCzIYLmdhdWdlLm1lc3Nh",
            "Z2VzLlNwZWNJbmZvEjUKD2N1cnJlbnRTY2VuYXJpbxgCIAEoCzIcLmdhdWdl",
            "Lm1lc3NhZ2VzLlNjZW5hcmlvSW5mbxItCgtjdXJyZW50U3RlcBgDIAEoCzIY",
            "LmdhdWdlLm1lc3NhZ2VzLlN0ZXBJbmZvEhIKCnN0YWNrdHJhY2UYBCABKAki",
            "SgoIU3BlY0luZm8SDAoEbmFtZRgBIAEoCRIQCghmaWxlTmFtZRgCIAEoCRIQ",
            "Cghpc0ZhaWxlZBgDIAEoCBIMCgR0YWdzGAQgAygJIjwKDFNjZW5hcmlvSW5m",
            "bxIMCgRuYW1lGAEgASgJEhAKCGlzRmFpbGVkGAIgASgIEgwKBHRhZ3MYAyAD",
            "KAkieAoIU3RlcEluZm8SMAoEc3RlcBgBIAEoCzIiLmdhdWdlLm1lc3NhZ2Vz",
            "LkV4ZWN1dGVTdGVwUmVxdWVzdBIQCghpc0ZhaWxlZBgCIAEoCBISCgpzdGFj",
            "a1RyYWNlGAMgASgJEhQKDGVycm9yTWVzc2FnZRgEIAEoCSKMAQoSRXhlY3V0",
            "ZVN0ZXBSZXF1ZXN0EhYKDmFjdHVhbFN0ZXBUZXh0GAEgASgJEhYKDnBhcnNl",
            "ZFN0ZXBUZXh0GAIgASgJEhcKD3NjZW5hcmlvRmFpbGluZxgDIAEoCBItCgpw",
            "YXJhbWV0ZXJzGAQgAygLMhkuZ2F1Z2UubWVzc2FnZXMuUGFyYW1ldGVyInYK",
            "E1N0ZXBWYWxpZGF0ZVJlcXVlc3QSEAoIc3RlcFRleHQYASABKAkSGgoSbnVt",
            "YmVyT2ZQYXJhbWV0ZXJzGAIgASgFEjEKCXN0ZXBWYWx1ZRgDIAEoCzIeLmdh",
            "dWdlLm1lc3NhZ2VzLlByb3RvU3RlcFZhbHVlIucBChRTdGVwVmFsaWRhdGVS",
            "ZXNwb25zZRIPCgdpc1ZhbGlkGAEgASgIEhQKDGVycm9yTWVzc2FnZRgCIAEo",
            "CRJBCgllcnJvclR5cGUYAyABKA4yLi5nYXVnZS5tZXNzYWdlcy5TdGVwVmFs",
            "aWRhdGVSZXNwb25zZS5FcnJvclR5cGUSEgoKc3VnZ2VzdGlvbhgEIAEoCSJR",
            "CglFcnJvclR5cGUSIQodU1RFUF9JTVBMRU1FTlRBVElPTl9OT1RfRk9VTkQQ",
            "ABIhCh1EVVBMSUNBVEVfU1RFUF9JTVBMRU1FTlRBVElPThABIk0KFFN1aXRl",
            "RXhlY3V0aW9uUmVzdWx0EjUKC3N1aXRlUmVzdWx0GAEgASgLMiAuZ2F1Z2Uu",
            "bWVzc2FnZXMuUHJvdG9TdWl0ZVJlc3VsdCISChBTdGVwTmFtZXNSZXF1ZXN0",
            "IiIKEVN0ZXBOYW1lc1Jlc3BvbnNlEg0KBXN0ZXBzGAEgAygJIh4KHFNjZW5h",
            "cmlvRGF0YVN0b3JlSW5pdFJlcXVlc3QiGgoYU3BlY0RhdGFTdG9yZUluaXRS",
            "ZXF1ZXN0IhsKGVN1aXRlRGF0YVN0b3JlSW5pdFJlcXVlc3QiPQoRUGFyYW1l",
            "dGVyUG9zaXRpb24SEwoLb2xkUG9zaXRpb24YASABKAUSEwoLbmV3UG9zaXRp",
            "b24YAiABKAUizQEKD1JlZmFjdG9yUmVxdWVzdBI0CgxvbGRTdGVwVmFsdWUY",
            "ASABKAsyHi5nYXVnZS5tZXNzYWdlcy5Qcm90b1N0ZXBWYWx1ZRI0CgxuZXdT",
            "dGVwVmFsdWUYAiABKAsyHi5nYXVnZS5tZXNzYWdlcy5Qcm90b1N0ZXBWYWx1",
            "ZRI5Cg5wYXJhbVBvc2l0aW9ucxgDIAMoCzIhLmdhdWdlLm1lc3NhZ2VzLlBh",
            "cmFtZXRlclBvc2l0aW9uEhMKC3NhdmVDaGFuZ2VzGAQgASgIImEKC0ZpbGVD",
            "aGFuZ2VzEhAKCGZpbGVOYW1lGAEgASgJEhcKC2ZpbGVDb250ZW50GAIgASgJ",
            "QgIYARInCgVkaWZmcxgDIAMoCzIYLmdhdWdlLm1lc3NhZ2VzLlRleHREaWZm",
            "InoKEFJlZmFjdG9yUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBINCgVlcnJv",
            "chgCIAEoCRIUCgxmaWxlc0NoYW5nZWQYAyADKAkSMAoLZmlsZUNoYW5nZXMY",
            "BCADKAsyGy5nYXVnZS5tZXNzYWdlcy5GaWxlQ2hhbmdlcyIkCg9TdGVwTmFt",
            "ZVJlcXVlc3QSEQoJc3RlcFZhbHVlGAEgASgJIoMBChBTdGVwTmFtZVJlc3Bv",
            "bnNlEhUKDWlzU3RlcFByZXNlbnQYASABKAgSEAoIc3RlcE5hbWUYAiADKAkS",
            "EAoIaGFzQWxpYXMYAyABKAgSEAoIZmlsZU5hbWUYBCABKAkSIgoEc3BhbhgF",
            "IAEoCzIULmdhdWdlLm1lc3NhZ2VzLlNwYW4iLQoaVW5zdXBwb3J0ZWRNZXNz",
            "YWdlUmVzcG9uc2USDwoHbWVzc2FnZRgBIAEoCSLRAQoQQ2FjaGVGaWxlUmVx",
            "dWVzdBIPCgdjb250ZW50GAEgASgJEhAKCGZpbGVQYXRoGAIgASgJEhAKCGlz",
            "Q2xvc2VkGAMgASgIEjsKBnN0YXR1cxgEIAEoDjIrLmdhdWdlLm1lc3NhZ2Vz",
            "LkNhY2hlRmlsZVJlcXVlc3QuRmlsZVN0YXR1cyJLCgpGaWxlU3RhdHVzEgsK",
            "B0NIQU5HRUQQABIKCgZDTE9TRUQQARILCgdDUkVBVEVEEAISCwoHREVMRVRF",
            "RBADEgoKBk9QRU5FRBAEIigKFFN0ZXBQb3NpdGlvbnNSZXF1ZXN0EhAKCGZp",
            "bGVQYXRoGAEgASgJIrgBChVTdGVwUG9zaXRpb25zUmVzcG9uc2USSQoNc3Rl",
            "cFBvc2l0aW9ucxgBIAMoCzIyLmdhdWdlLm1lc3NhZ2VzLlN0ZXBQb3NpdGlv",
            "bnNSZXNwb25zZS5TdGVwUG9zaXRpb24SDQoFZXJyb3IYAiABKAkaRQoMU3Rl",
            "cFBvc2l0aW9uEhEKCXN0ZXBWYWx1ZRgBIAEoCRIiCgRzcGFuGAIgASgLMhQu",
            "Z2F1Z2UubWVzc2FnZXMuU3BhbiImCiRJbXBsZW1lbnRhdGlvbkZpbGVHbG9i",
            "UGF0dGVyblJlcXVlc3QiPQolSW1wbGVtZW50YXRpb25GaWxlR2xvYlBhdHRl",
            "cm5SZXNwb25zZRIUCgxnbG9iUGF0dGVybnMYASADKAkiHwodSW1wbGVtZW50",
            "YXRpb25GaWxlTGlzdFJlcXVlc3QiQQoeSW1wbGVtZW50YXRpb25GaWxlTGlz",
            "dFJlc3BvbnNlEh8KF2ltcGxlbWVudGF0aW9uRmlsZVBhdGhzGAEgAygJIk4K",
            "HVN0dWJJbXBsZW1lbnRhdGlvbkNvZGVSZXF1ZXN0Eh4KFmltcGxlbWVudGF0",
            "aW9uRmlsZVBhdGgYASABKAkSDQoFY29kZXMYAiADKAkiPwoIVGV4dERpZmYS",
            "IgoEc3BhbhgBIAEoCzIULmdhdWdlLm1lc3NhZ2VzLlNwYW4SDwoHY29udGVu",
            "dBgCIAEoCSJJCghGaWxlRGlmZhIQCghmaWxlUGF0aBgBIAEoCRIrCgl0ZXh0",
            "RGlmZnMYAiADKAsyGC5nYXVnZS5tZXNzYWdlcy5UZXh0RGlmZiLWGgoHTWVz",
            "c2FnZRI4CgttZXNzYWdlVHlwZRgBIAEoDjIjLmdhdWdlLm1lc3NhZ2VzLk1l",
            "c3NhZ2UuTWVzc2FnZVR5cGUSEQoJbWVzc2FnZUlkGAIgASgDEkoKGGV4ZWN1",
            "dGlvblN0YXJ0aW5nUmVxdWVzdBgDIAEoCzIoLmdhdWdlLm1lc3NhZ2VzLkV4",
            "ZWN1dGlvblN0YXJ0aW5nUmVxdWVzdBJSChxzcGVjRXhlY3V0aW9uU3RhcnRp",
            "bmdSZXF1ZXN0GAQgASgLMiwuZ2F1Z2UubWVzc2FnZXMuU3BlY0V4ZWN1dGlv",
            "blN0YXJ0aW5nUmVxdWVzdBJOChpzcGVjRXhlY3V0aW9uRW5kaW5nUmVxdWVz",
            "dBgFIAEoCzIqLmdhdWdlLm1lc3NhZ2VzLlNwZWNFeGVjdXRpb25FbmRpbmdS",
            "ZXF1ZXN0EloKIHNjZW5hcmlvRXhlY3V0aW9uU3RhcnRpbmdSZXF1ZXN0GAYg",
            "ASgLMjAuZ2F1Z2UubWVzc2FnZXMuU2NlbmFyaW9FeGVjdXRpb25TdGFydGlu",
            "Z1JlcXVlc3QSVgoec2NlbmFyaW9FeGVjdXRpb25FbmRpbmdSZXF1ZXN0GAcg",
            "ASgLMi4uZ2F1Z2UubWVzc2FnZXMuU2NlbmFyaW9FeGVjdXRpb25FbmRpbmdS",
            "ZXF1ZXN0ElIKHHN0ZXBFeGVjdXRpb25TdGFydGluZ1JlcXVlc3QYCCABKAsy",
            "LC5nYXVnZS5tZXNzYWdlcy5TdGVwRXhlY3V0aW9uU3RhcnRpbmdSZXF1ZXN0",
            "Ek4KGnN0ZXBFeGVjdXRpb25FbmRpbmdSZXF1ZXN0GAkgASgLMiouZ2F1Z2Uu",
            "bWVzc2FnZXMuU3RlcEV4ZWN1dGlvbkVuZGluZ1JlcXVlc3QSPgoSZXhlY3V0",
            "ZVN0ZXBSZXF1ZXN0GAogASgLMiIuZ2F1Z2UubWVzc2FnZXMuRXhlY3V0ZVN0",
            "ZXBSZXF1ZXN0EkYKFmV4ZWN1dGlvbkVuZGluZ1JlcXVlc3QYCyABKAsyJi5n",
            "YXVnZS5tZXNzYWdlcy5FeGVjdXRpb25FbmRpbmdSZXF1ZXN0EkAKE3N0ZXBW",
            "YWxpZGF0ZVJlcXVlc3QYDCABKAsyIy5nYXVnZS5tZXNzYWdlcy5TdGVwVmFs",
            "aWRhdGVSZXF1ZXN0EkIKFHN0ZXBWYWxpZGF0ZVJlc3BvbnNlGA0gASgLMiQu",
            "Z2F1Z2UubWVzc2FnZXMuU3RlcFZhbGlkYXRlUmVzcG9uc2USSAoXZXhlY3V0",
            "aW9uU3RhdHVzUmVzcG9uc2UYDiABKAsyJy5nYXVnZS5tZXNzYWdlcy5FeGVj",
            "dXRpb25TdGF0dXNSZXNwb25zZRI6ChBzdGVwTmFtZXNSZXF1ZXN0GA8gASgL",
            "MiAuZ2F1Z2UubWVzc2FnZXMuU3RlcE5hbWVzUmVxdWVzdBI8ChFzdGVwTmFt",
            "ZXNSZXNwb25zZRgQIAEoCzIhLmdhdWdlLm1lc3NhZ2VzLlN0ZXBOYW1lc1Jl",
            "c3BvbnNlEkIKFHN1aXRlRXhlY3V0aW9uUmVzdWx0GBEgASgLMiQuZ2F1Z2Uu",
            "bWVzc2FnZXMuU3VpdGVFeGVjdXRpb25SZXN1bHQSPgoSa2lsbFByb2Nlc3NS",
            "ZXF1ZXN0GBIgASgLMiIuZ2F1Z2UubWVzc2FnZXMuS2lsbFByb2Nlc3NSZXF1",
            "ZXN0ElIKHHNjZW5hcmlvRGF0YVN0b3JlSW5pdFJlcXVlc3QYEyABKAsyLC5n",
            "YXVnZS5tZXNzYWdlcy5TY2VuYXJpb0RhdGFTdG9yZUluaXRSZXF1ZXN0EkoK",
            "GHNwZWNEYXRhU3RvcmVJbml0UmVxdWVzdBgUIAEoCzIoLmdhdWdlLm1lc3Nh",
            "Z2VzLlNwZWNEYXRhU3RvcmVJbml0UmVxdWVzdBJMChlzdWl0ZURhdGFTdG9y",
            "ZUluaXRSZXF1ZXN0GBUgASgLMikuZ2F1Z2UubWVzc2FnZXMuU3VpdGVEYXRh",
            "U3RvcmVJbml0UmVxdWVzdBI4Cg9zdGVwTmFtZVJlcXVlc3QYFiABKAsyHy5n",
            "YXVnZS5tZXNzYWdlcy5TdGVwTmFtZVJlcXVlc3QSOgoQc3RlcE5hbWVSZXNw",
            "b25zZRgXIAEoCzIgLmdhdWdlLm1lc3NhZ2VzLlN0ZXBOYW1lUmVzcG9uc2US",
            "OAoPcmVmYWN0b3JSZXF1ZXN0GBggASgLMh8uZ2F1Z2UubWVzc2FnZXMuUmVm",
            "YWN0b3JSZXF1ZXN0EjoKEHJlZmFjdG9yUmVzcG9uc2UYGSABKAsyIC5nYXVn",
            "ZS5tZXNzYWdlcy5SZWZhY3RvclJlc3BvbnNlEk4KGnVuc3VwcG9ydGVkTWVz",
            "c2FnZVJlc3BvbnNlGBogASgLMiouZ2F1Z2UubWVzc2FnZXMuVW5zdXBwb3J0",
            "ZWRNZXNzYWdlUmVzcG9uc2USOgoQY2FjaGVGaWxlUmVxdWVzdBgbIAEoCzIg",
            "LmdhdWdlLm1lc3NhZ2VzLkNhY2hlRmlsZVJlcXVlc3QSQgoUc3RlcFBvc2l0",
            "aW9uc1JlcXVlc3QYHCABKAsyJC5nYXVnZS5tZXNzYWdlcy5TdGVwUG9zaXRp",
            "b25zUmVxdWVzdBJEChVzdGVwUG9zaXRpb25zUmVzcG9uc2UYHSABKAsyJS5n",
            "YXVnZS5tZXNzYWdlcy5TdGVwUG9zaXRpb25zUmVzcG9uc2USVAodaW1wbGVt",
            "ZW50YXRpb25GaWxlTGlzdFJlcXVlc3QYHiABKAsyLS5nYXVnZS5tZXNzYWdl",
            "cy5JbXBsZW1lbnRhdGlvbkZpbGVMaXN0UmVxdWVzdBJWCh5pbXBsZW1lbnRh",
            "dGlvbkZpbGVMaXN0UmVzcG9uc2UYHyABKAsyLi5nYXVnZS5tZXNzYWdlcy5J",
            "bXBsZW1lbnRhdGlvbkZpbGVMaXN0UmVzcG9uc2USVAodc3R1YkltcGxlbWVu",
            "dGF0aW9uQ29kZVJlcXVlc3QYICABKAsyLS5nYXVnZS5tZXNzYWdlcy5TdHVi",
            "SW1wbGVtZW50YXRpb25Db2RlUmVxdWVzdBIqCghmaWxlRGlmZhghIAEoCzIY",
            "LmdhdWdlLm1lc3NhZ2VzLkZpbGVEaWZmEmIKJGltcGxlbWVudGF0aW9uRmls",
            "ZUdsb2JQYXR0ZXJuUmVxdWVzdBgiIAEoCzI0LmdhdWdlLm1lc3NhZ2VzLklt",
            "cGxlbWVudGF0aW9uRmlsZUdsb2JQYXR0ZXJuUmVxdWVzdBJkCiVpbXBsZW1l",
            "bnRhdGlvbkZpbGVHbG9iUGF0dGVyblJlc3BvbnNlGCMgASgLMjUuZ2F1Z2Uu",
            "bWVzc2FnZXMuSW1wbGVtZW50YXRpb25GaWxlR2xvYlBhdHRlcm5SZXNwb25z",
            "ZSL1BgoLTWVzc2FnZVR5cGUSFQoRRXhlY3V0aW9uU3RhcnRpbmcQABIZChVT",
            "cGVjRXhlY3V0aW9uU3RhcnRpbmcQARIXChNTcGVjRXhlY3V0aW9uRW5kaW5n",
            "EAISHQoZU2NlbmFyaW9FeGVjdXRpb25TdGFydGluZxADEhsKF1NjZW5hcmlv",
            "RXhlY3V0aW9uRW5kaW5nEAQSGQoVU3RlcEV4ZWN1dGlvblN0YXJ0aW5nEAUS",
            "FwoTU3RlcEV4ZWN1dGlvbkVuZGluZxAGEg8KC0V4ZWN1dGVTdGVwEAcSEwoP",
            "RXhlY3V0aW9uRW5kaW5nEAgSFwoTU3RlcFZhbGlkYXRlUmVxdWVzdBAJEhgK",
            "FFN0ZXBWYWxpZGF0ZVJlc3BvbnNlEAoSGwoXRXhlY3V0aW9uU3RhdHVzUmVz",
            "cG9uc2UQCxIUChBTdGVwTmFtZXNSZXF1ZXN0EAwSFQoRU3RlcE5hbWVzUmVz",
            "cG9uc2UQDRIWChJLaWxsUHJvY2Vzc1JlcXVlc3QQDhIYChRTdWl0ZUV4ZWN1",
            "dGlvblJlc3VsdBAPEhkKFVNjZW5hcmlvRGF0YVN0b3JlSW5pdBAQEhUKEVNw",
            "ZWNEYXRhU3RvcmVJbml0EBESFgoSU3VpdGVEYXRhU3RvcmVJbml0EBISEwoP",
            "U3RlcE5hbWVSZXF1ZXN0EBMSFAoQU3RlcE5hbWVSZXNwb25zZRAUEhMKD1Jl",
            "ZmFjdG9yUmVxdWVzdBAVEhQKEFJlZmFjdG9yUmVzcG9uc2UQFhIeChpVbnN1",
            "cHBvcnRlZE1lc3NhZ2VSZXNwb25zZRAXEhQKEENhY2hlRmlsZVJlcXVlc3QQ",
            "GBIYChRTdGVwUG9zaXRpb25zUmVxdWVzdBAZEhkKFVN0ZXBQb3NpdGlvbnNS",
            "ZXNwb25zZRAaEiEKHUltcGxlbWVudGF0aW9uRmlsZUxpc3RSZXF1ZXN0EBsS",
            "IgoeSW1wbGVtZW50YXRpb25GaWxlTGlzdFJlc3BvbnNlEBwSIQodU3R1Yklt",
            "cGxlbWVudGF0aW9uQ29kZVJlcXVlc3QQHRIMCghGaWxlRGlmZhAeEigKJElt",
            "cGxlbWVudGF0aW9uRmlsZUdsb2JQYXR0ZXJuUmVxdWVzdBAfEikKJUltcGxl",
            "bWVudGF0aW9uRmlsZUdsb2JQYXR0ZXJuUmVzcG9uc2UQIEIpChZjb20udGhv",
            "dWdodHdvcmtzLmdhdWdlqgIOR2F1Z2UuTWVzc2FnZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gauge.Messages.SpecReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.KillProcessRequest), global::Gauge.Messages.KillProcessRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ExecutionStatusResponse), global::Gauge.Messages.ExecutionStatusResponse.Parser, new[]{ "ExecutionResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ExecutionStartingRequest), global::Gauge.Messages.ExecutionStartingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ExecutionEndingRequest), global::Gauge.Messages.ExecutionEndingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.SpecExecutionStartingRequest), global::Gauge.Messages.SpecExecutionStartingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.SpecExecutionEndingRequest), global::Gauge.Messages.SpecExecutionEndingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ScenarioExecutionStartingRequest), global::Gauge.Messages.ScenarioExecutionStartingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ScenarioExecutionEndingRequest), global::Gauge.Messages.ScenarioExecutionEndingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepExecutionStartingRequest), global::Gauge.Messages.StepExecutionStartingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepExecutionEndingRequest), global::Gauge.Messages.StepExecutionEndingRequest.Parser, new[]{ "CurrentExecutionInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ExecutionInfo), global::Gauge.Messages.ExecutionInfo.Parser, new[]{ "CurrentSpec", "CurrentScenario", "CurrentStep", "Stacktrace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.SpecInfo), global::Gauge.Messages.SpecInfo.Parser, new[]{ "Name", "FileName", "IsFailed", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ScenarioInfo), global::Gauge.Messages.ScenarioInfo.Parser, new[]{ "Name", "IsFailed", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepInfo), global::Gauge.Messages.StepInfo.Parser, new[]{ "Step", "IsFailed", "StackTrace", "ErrorMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ExecuteStepRequest), global::Gauge.Messages.ExecuteStepRequest.Parser, new[]{ "ActualStepText", "ParsedStepText", "ScenarioFailing", "Parameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepValidateRequest), global::Gauge.Messages.StepValidateRequest.Parser, new[]{ "StepText", "NumberOfParameters", "StepValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepValidateResponse), global::Gauge.Messages.StepValidateResponse.Parser, new[]{ "IsValid", "ErrorMessage", "ErrorType", "Suggestion" }, null, new[]{ typeof(global::Gauge.Messages.StepValidateResponse.Types.ErrorType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.SuiteExecutionResult), global::Gauge.Messages.SuiteExecutionResult.Parser, new[]{ "SuiteResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepNamesRequest), global::Gauge.Messages.StepNamesRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepNamesResponse), global::Gauge.Messages.StepNamesResponse.Parser, new[]{ "Steps" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ScenarioDataStoreInitRequest), global::Gauge.Messages.ScenarioDataStoreInitRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.SpecDataStoreInitRequest), global::Gauge.Messages.SpecDataStoreInitRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.SuiteDataStoreInitRequest), global::Gauge.Messages.SuiteDataStoreInitRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ParameterPosition), global::Gauge.Messages.ParameterPosition.Parser, new[]{ "OldPosition", "NewPosition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.RefactorRequest), global::Gauge.Messages.RefactorRequest.Parser, new[]{ "OldStepValue", "NewStepValue", "ParamPositions", "SaveChanges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.FileChanges), global::Gauge.Messages.FileChanges.Parser, new[]{ "FileName", "FileContent", "Diffs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.RefactorResponse), global::Gauge.Messages.RefactorResponse.Parser, new[]{ "Success", "Error", "FilesChanged", "FileChanges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepNameRequest), global::Gauge.Messages.StepNameRequest.Parser, new[]{ "StepValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepNameResponse), global::Gauge.Messages.StepNameResponse.Parser, new[]{ "IsStepPresent", "StepName", "HasAlias", "FileName", "Span" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.UnsupportedMessageResponse), global::Gauge.Messages.UnsupportedMessageResponse.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.CacheFileRequest), global::Gauge.Messages.CacheFileRequest.Parser, new[]{ "Content", "FilePath", "IsClosed", "Status" }, null, new[]{ typeof(global::Gauge.Messages.CacheFileRequest.Types.FileStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepPositionsRequest), global::Gauge.Messages.StepPositionsRequest.Parser, new[]{ "FilePath" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepPositionsResponse), global::Gauge.Messages.StepPositionsResponse.Parser, new[]{ "StepPositions", "Error" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StepPositionsResponse.Types.StepPosition), global::Gauge.Messages.StepPositionsResponse.Types.StepPosition.Parser, new[]{ "StepValue", "Span" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ImplementationFileGlobPatternRequest), global::Gauge.Messages.ImplementationFileGlobPatternRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ImplementationFileGlobPatternResponse), global::Gauge.Messages.ImplementationFileGlobPatternResponse.Parser, new[]{ "GlobPatterns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ImplementationFileListRequest), global::Gauge.Messages.ImplementationFileListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.ImplementationFileListResponse), global::Gauge.Messages.ImplementationFileListResponse.Parser, new[]{ "ImplementationFilePaths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.StubImplementationCodeRequest), global::Gauge.Messages.StubImplementationCodeRequest.Parser, new[]{ "ImplementationFilePath", "Codes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.TextDiff), global::Gauge.Messages.TextDiff.Parser, new[]{ "Span", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.FileDiff), global::Gauge.Messages.FileDiff.Parser, new[]{ "FilePath", "TextDiffs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gauge.Messages.Message), global::Gauge.Messages.Message.Parser, new[]{ "MessageType", "MessageId", "ExecutionStartingRequest", "SpecExecutionStartingRequest", "SpecExecutionEndingRequest", "ScenarioExecutionStartingRequest", "ScenarioExecutionEndingRequest", "StepExecutionStartingRequest", "StepExecutionEndingRequest", "ExecuteStepRequest", "ExecutionEndingRequest", "StepValidateRequest", "StepValidateResponse", "ExecutionStatusResponse", "StepNamesRequest", "StepNamesResponse", "SuiteExecutionResult", "KillProcessRequest", "ScenarioDataStoreInitRequest", "SpecDataStoreInitRequest", "SuiteDataStoreInitRequest", "StepNameRequest", "StepNameResponse", "RefactorRequest", "RefactorResponse", "UnsupportedMessageResponse", "CacheFileRequest", "StepPositionsRequest", "StepPositionsResponse", "ImplementationFileListRequest", "ImplementationFileListResponse", "StubImplementationCodeRequest", "FileDiff", "ImplementationFileGlobPatternRequest", "ImplementationFileGlobPatternResponse" }, null, new[]{ typeof(global::Gauge.Messages.Message.Types.MessageType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  //// Default request. Tells the runner to shutdown.
  /// </summary>
  public sealed partial class KillProcessRequest : pb::IMessage<KillProcessRequest> {
    private static readonly pb::MessageParser<KillProcessRequest> _parser = new pb::MessageParser<KillProcessRequest>(() => new KillProcessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KillProcessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillProcessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillProcessRequest(KillProcessRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillProcessRequest Clone() {
      return new KillProcessRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KillProcessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KillProcessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KillProcessRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Sends to any request which needs a execution status as response
  //// usually step execution, hooks etc will return this
  /// </summary>
  public sealed partial class ExecutionStatusResponse : pb::IMessage<ExecutionStatusResponse> {
    private static readonly pb::MessageParser<ExecutionStatusResponse> _parser = new pb::MessageParser<ExecutionStatusResponse>(() => new ExecutionStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutionStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatusResponse(ExecutionStatusResponse other) : this() {
      ExecutionResult = other.executionResult_ != null ? other.ExecutionResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStatusResponse Clone() {
      return new ExecutionStatusResponse(this);
    }

    /// <summary>Field number for the "executionResult" field.</summary>
    public const int ExecutionResultFieldNumber = 1;
    private global::Gauge.Messages.ProtoExecutionResult executionResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ProtoExecutionResult ExecutionResult {
      get { return executionResult_; }
      set {
        executionResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutionStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutionStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExecutionResult, other.ExecutionResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (executionResult_ != null) hash ^= ExecutionResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (executionResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExecutionResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (executionResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutionStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.executionResult_ != null) {
        if (executionResult_ == null) {
          executionResult_ = new global::Gauge.Messages.ProtoExecutionResult();
        }
        ExecutionResult.MergeFrom(other.ExecutionResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (executionResult_ == null) {
              executionResult_ = new global::Gauge.Messages.ProtoExecutionResult();
            }
            input.ReadMessage(executionResult_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at start of Suite Execution. Tells the runner to execute `before_suite` hook.
  /// </summary>
  public sealed partial class ExecutionStartingRequest : pb::IMessage<ExecutionStartingRequest> {
    private static readonly pb::MessageParser<ExecutionStartingRequest> _parser = new pb::MessageParser<ExecutionStartingRequest>(() => new ExecutionStartingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutionStartingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStartingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStartingRequest(ExecutionStartingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionStartingRequest Clone() {
      return new ExecutionStartingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutionStartingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutionStartingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutionStartingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at end of Suite Execution. Tells the runner to execute `after_suite` hook.
  /// </summary>
  public sealed partial class ExecutionEndingRequest : pb::IMessage<ExecutionEndingRequest> {
    private static readonly pb::MessageParser<ExecutionEndingRequest> _parser = new pb::MessageParser<ExecutionEndingRequest>(() => new ExecutionEndingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutionEndingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionEndingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionEndingRequest(ExecutionEndingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionEndingRequest Clone() {
      return new ExecutionEndingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutionEndingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutionEndingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutionEndingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at start of Spec Execution. Tells the runner to execute `before_spec` hook.
  /// </summary>
  public sealed partial class SpecExecutionStartingRequest : pb::IMessage<SpecExecutionStartingRequest> {
    private static readonly pb::MessageParser<SpecExecutionStartingRequest> _parser = new pb::MessageParser<SpecExecutionStartingRequest>(() => new SpecExecutionStartingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecExecutionStartingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecExecutionStartingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecExecutionStartingRequest(SpecExecutionStartingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecExecutionStartingRequest Clone() {
      return new SpecExecutionStartingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecExecutionStartingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecExecutionStartingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecExecutionStartingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at end of Spec Execution. Tells the runner to execute `after_spec` hook.
  /// </summary>
  public sealed partial class SpecExecutionEndingRequest : pb::IMessage<SpecExecutionEndingRequest> {
    private static readonly pb::MessageParser<SpecExecutionEndingRequest> _parser = new pb::MessageParser<SpecExecutionEndingRequest>(() => new SpecExecutionEndingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecExecutionEndingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecExecutionEndingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecExecutionEndingRequest(SpecExecutionEndingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecExecutionEndingRequest Clone() {
      return new SpecExecutionEndingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecExecutionEndingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecExecutionEndingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecExecutionEndingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at start of Scenario Execution. Tells the runner to execute `before_scenario` hook.
  /// </summary>
  public sealed partial class ScenarioExecutionStartingRequest : pb::IMessage<ScenarioExecutionStartingRequest> {
    private static readonly pb::MessageParser<ScenarioExecutionStartingRequest> _parser = new pb::MessageParser<ScenarioExecutionStartingRequest>(() => new ScenarioExecutionStartingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScenarioExecutionStartingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioExecutionStartingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioExecutionStartingRequest(ScenarioExecutionStartingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioExecutionStartingRequest Clone() {
      return new ScenarioExecutionStartingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScenarioExecutionStartingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScenarioExecutionStartingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScenarioExecutionStartingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at end of Scenario Execution. Tells the runner to execute `after_scenario` hook.
  /// </summary>
  public sealed partial class ScenarioExecutionEndingRequest : pb::IMessage<ScenarioExecutionEndingRequest> {
    private static readonly pb::MessageParser<ScenarioExecutionEndingRequest> _parser = new pb::MessageParser<ScenarioExecutionEndingRequest>(() => new ScenarioExecutionEndingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScenarioExecutionEndingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioExecutionEndingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioExecutionEndingRequest(ScenarioExecutionEndingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioExecutionEndingRequest Clone() {
      return new ScenarioExecutionEndingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScenarioExecutionEndingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScenarioExecutionEndingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScenarioExecutionEndingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at start of Step Execution. Tells the runner to execute `before_step` hook.
  /// </summary>
  public sealed partial class StepExecutionStartingRequest : pb::IMessage<StepExecutionStartingRequest> {
    private static readonly pb::MessageParser<StepExecutionStartingRequest> _parser = new pb::MessageParser<StepExecutionStartingRequest>(() => new StepExecutionStartingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepExecutionStartingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepExecutionStartingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepExecutionStartingRequest(StepExecutionStartingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepExecutionStartingRequest Clone() {
      return new StepExecutionStartingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepExecutionStartingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepExecutionStartingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepExecutionStartingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Sent at end of Step Execution. Tells the runner to execute `after_step` hook.
  /// </summary>
  public sealed partial class StepExecutionEndingRequest : pb::IMessage<StepExecutionEndingRequest> {
    private static readonly pb::MessageParser<StepExecutionEndingRequest> _parser = new pb::MessageParser<StepExecutionEndingRequest>(() => new StepExecutionEndingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepExecutionEndingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepExecutionEndingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepExecutionEndingRequest(StepExecutionEndingRequest other) : this() {
      CurrentExecutionInfo = other.currentExecutionInfo_ != null ? other.CurrentExecutionInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepExecutionEndingRequest Clone() {
      return new StepExecutionEndingRequest(this);
    }

    /// <summary>Field number for the "currentExecutionInfo" field.</summary>
    public const int CurrentExecutionInfoFieldNumber = 1;
    private global::Gauge.Messages.ExecutionInfo currentExecutionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionInfo CurrentExecutionInfo {
      get { return currentExecutionInfo_; }
      set {
        currentExecutionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepExecutionEndingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepExecutionEndingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentExecutionInfo, other.CurrentExecutionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentExecutionInfo_ != null) hash ^= CurrentExecutionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentExecutionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentExecutionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentExecutionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepExecutionEndingRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentExecutionInfo_ != null) {
        if (currentExecutionInfo_ == null) {
          currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
        }
        CurrentExecutionInfo.MergeFrom(other.CurrentExecutionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentExecutionInfo_ == null) {
              currentExecutionInfo_ = new global::Gauge.Messages.ExecutionInfo();
            }
            input.ReadMessage(currentExecutionInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Contains details of the execution. 
  //// Depending on the context (Step, Scenario, Spec or Suite), the respective fields are set.
  /// </summary>
  public sealed partial class ExecutionInfo : pb::IMessage<ExecutionInfo> {
    private static readonly pb::MessageParser<ExecutionInfo> _parser = new pb::MessageParser<ExecutionInfo>(() => new ExecutionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionInfo(ExecutionInfo other) : this() {
      CurrentSpec = other.currentSpec_ != null ? other.CurrentSpec.Clone() : null;
      CurrentScenario = other.currentScenario_ != null ? other.CurrentScenario.Clone() : null;
      CurrentStep = other.currentStep_ != null ? other.CurrentStep.Clone() : null;
      stacktrace_ = other.stacktrace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionInfo Clone() {
      return new ExecutionInfo(this);
    }

    /// <summary>Field number for the "currentSpec" field.</summary>
    public const int CurrentSpecFieldNumber = 1;
    private global::Gauge.Messages.SpecInfo currentSpec_;
    /// <summary>
    //// Holds the information of the current Spec. Valid in context of Spec execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.SpecInfo CurrentSpec {
      get { return currentSpec_; }
      set {
        currentSpec_ = value;
      }
    }

    /// <summary>Field number for the "currentScenario" field.</summary>
    public const int CurrentScenarioFieldNumber = 2;
    private global::Gauge.Messages.ScenarioInfo currentScenario_;
    /// <summary>
    //// Holds the information of the current Scenario. Valid in context of Scenario execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ScenarioInfo CurrentScenario {
      get { return currentScenario_; }
      set {
        currentScenario_ = value;
      }
    }

    /// <summary>Field number for the "currentStep" field.</summary>
    public const int CurrentStepFieldNumber = 3;
    private global::Gauge.Messages.StepInfo currentStep_;
    /// <summary>
    //// Holds the information of the current Step. Valid in context of Step execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepInfo CurrentStep {
      get { return currentStep_; }
      set {
        currentStep_ = value;
      }
    }

    /// <summary>Field number for the "stacktrace" field.</summary>
    public const int StacktraceFieldNumber = 4;
    private string stacktrace_ = "";
    /// <summary>
    //// Stacktrace of the execution. Valid only if there is an error in execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stacktrace {
      get { return stacktrace_; }
      set {
        stacktrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentSpec, other.CurrentSpec)) return false;
      if (!object.Equals(CurrentScenario, other.CurrentScenario)) return false;
      if (!object.Equals(CurrentStep, other.CurrentStep)) return false;
      if (Stacktrace != other.Stacktrace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentSpec_ != null) hash ^= CurrentSpec.GetHashCode();
      if (currentScenario_ != null) hash ^= CurrentScenario.GetHashCode();
      if (currentStep_ != null) hash ^= CurrentStep.GetHashCode();
      if (Stacktrace.Length != 0) hash ^= Stacktrace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentSpec);
      }
      if (currentScenario_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CurrentScenario);
      }
      if (currentStep_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CurrentStep);
      }
      if (Stacktrace.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Stacktrace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentSpec);
      }
      if (currentScenario_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentScenario);
      }
      if (currentStep_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentStep);
      }
      if (Stacktrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stacktrace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutionInfo other) {
      if (other == null) {
        return;
      }
      if (other.currentSpec_ != null) {
        if (currentSpec_ == null) {
          currentSpec_ = new global::Gauge.Messages.SpecInfo();
        }
        CurrentSpec.MergeFrom(other.CurrentSpec);
      }
      if (other.currentScenario_ != null) {
        if (currentScenario_ == null) {
          currentScenario_ = new global::Gauge.Messages.ScenarioInfo();
        }
        CurrentScenario.MergeFrom(other.CurrentScenario);
      }
      if (other.currentStep_ != null) {
        if (currentStep_ == null) {
          currentStep_ = new global::Gauge.Messages.StepInfo();
        }
        CurrentStep.MergeFrom(other.CurrentStep);
      }
      if (other.Stacktrace.Length != 0) {
        Stacktrace = other.Stacktrace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currentSpec_ == null) {
              currentSpec_ = new global::Gauge.Messages.SpecInfo();
            }
            input.ReadMessage(currentSpec_);
            break;
          }
          case 18: {
            if (currentScenario_ == null) {
              currentScenario_ = new global::Gauge.Messages.ScenarioInfo();
            }
            input.ReadMessage(currentScenario_);
            break;
          }
          case 26: {
            if (currentStep_ == null) {
              currentStep_ = new global::Gauge.Messages.StepInfo();
            }
            input.ReadMessage(currentStep_);
            break;
          }
          case 34: {
            Stacktrace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Contains details of the Spec execution.
  /// </summary>
  public sealed partial class SpecInfo : pb::IMessage<SpecInfo> {
    private static readonly pb::MessageParser<SpecInfo> _parser = new pb::MessageParser<SpecInfo>(() => new SpecInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecInfo(SpecInfo other) : this() {
      name_ = other.name_;
      fileName_ = other.fileName_;
      isFailed_ = other.isFailed_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecInfo Clone() {
      return new SpecInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    //// Name of the current Spec being executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 2;
    private string fileName_ = "";
    /// <summary>
    //// Full File path containing the current Spec being executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isFailed" field.</summary>
    public const int IsFailedFieldNumber = 3;
    private bool isFailed_;
    /// <summary>
    //// Flag to indicate if the current Spec execution failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFailed {
      get { return isFailed_; }
      set {
        isFailed_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// Tags relevant to the current Spec execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (FileName != other.FileName) return false;
      if (IsFailed != other.IsFailed) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (IsFailed != false) hash ^= IsFailed.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (IsFailed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsFailed);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (IsFailed != false) {
        size += 1 + 1;
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.IsFailed != false) {
        IsFailed = other.IsFailed;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 24: {
            IsFailed = input.ReadBool();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Contains details of the Scenario execution.
  /// </summary>
  public sealed partial class ScenarioInfo : pb::IMessage<ScenarioInfo> {
    private static readonly pb::MessageParser<ScenarioInfo> _parser = new pb::MessageParser<ScenarioInfo>(() => new ScenarioInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScenarioInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioInfo(ScenarioInfo other) : this() {
      name_ = other.name_;
      isFailed_ = other.isFailed_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioInfo Clone() {
      return new ScenarioInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    //// Name of the current Scenario being executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isFailed" field.</summary>
    public const int IsFailedFieldNumber = 2;
    private bool isFailed_;
    /// <summary>
    //// Flag to indicate if the current Scenario execution failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFailed {
      get { return isFailed_; }
      set {
        isFailed_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// Tags relevant to the current Scenario execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScenarioInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScenarioInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (IsFailed != other.IsFailed) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IsFailed != false) hash ^= IsFailed.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (IsFailed != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFailed);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IsFailed != false) {
        size += 1 + 1;
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScenarioInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IsFailed != false) {
        IsFailed = other.IsFailed;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            IsFailed = input.ReadBool();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Contains details of the Step execution.
  /// </summary>
  public sealed partial class StepInfo : pb::IMessage<StepInfo> {
    private static readonly pb::MessageParser<StepInfo> _parser = new pb::MessageParser<StepInfo>(() => new StepInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepInfo(StepInfo other) : this() {
      Step = other.step_ != null ? other.Step.Clone() : null;
      isFailed_ = other.isFailed_;
      stackTrace_ = other.stackTrace_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepInfo Clone() {
      return new StepInfo(this);
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 1;
    private global::Gauge.Messages.ExecuteStepRequest step_;
    /// <summary>
    //// The current request to execute Step
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecuteStepRequest Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "isFailed" field.</summary>
    public const int IsFailedFieldNumber = 2;
    private bool isFailed_;
    /// <summary>
    //// Flag to indicate if the current Step execution failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFailed {
      get { return isFailed_; }
      set {
        isFailed_ = value;
      }
    }

    /// <summary>Field number for the "stackTrace" field.</summary>
    public const int StackTraceFieldNumber = 3;
    private string stackTrace_ = "";
    /// <summary>
    //// The current stack trace in case of failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 4;
    private string errorMessage_ = "";
    /// <summary>
    //// The error message in case of failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Step, other.Step)) return false;
      if (IsFailed != other.IsFailed) return false;
      if (StackTrace != other.StackTrace) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (step_ != null) hash ^= Step.GetHashCode();
      if (IsFailed != false) hash ^= IsFailed.GetHashCode();
      if (StackTrace.Length != 0) hash ^= StackTrace.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (step_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Step);
      }
      if (IsFailed != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFailed);
      }
      if (StackTrace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StackTrace);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (step_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Step);
      }
      if (IsFailed != false) {
        size += 1 + 1;
      }
      if (StackTrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepInfo other) {
      if (other == null) {
        return;
      }
      if (other.step_ != null) {
        if (step_ == null) {
          step_ = new global::Gauge.Messages.ExecuteStepRequest();
        }
        Step.MergeFrom(other.Step);
      }
      if (other.IsFailed != false) {
        IsFailed = other.IsFailed;
      }
      if (other.StackTrace.Length != 0) {
        StackTrace = other.StackTrace;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (step_ == null) {
              step_ = new global::Gauge.Messages.ExecuteStepRequest();
            }
            input.ReadMessage(step_);
            break;
          }
          case 16: {
            IsFailed = input.ReadBool();
            break;
          }
          case 26: {
            StackTrace = input.ReadString();
            break;
          }
          case 34: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request sent ot the runner to Execute a Step
  /// </summary>
  public sealed partial class ExecuteStepRequest : pb::IMessage<ExecuteStepRequest> {
    private static readonly pb::MessageParser<ExecuteStepRequest> _parser = new pb::MessageParser<ExecuteStepRequest>(() => new ExecuteStepRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecuteStepRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteStepRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteStepRequest(ExecuteStepRequest other) : this() {
      actualStepText_ = other.actualStepText_;
      parsedStepText_ = other.parsedStepText_;
      scenarioFailing_ = other.scenarioFailing_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteStepRequest Clone() {
      return new ExecuteStepRequest(this);
    }

    /// <summary>Field number for the "actualStepText" field.</summary>
    public const int ActualStepTextFieldNumber = 1;
    private string actualStepText_ = "";
    /// <summary>
    //// Contains the actual text of the Step being executed. 
    //// This contains the parameters as defined in the Spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActualStepText {
      get { return actualStepText_; }
      set {
        actualStepText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parsedStepText" field.</summary>
    public const int ParsedStepTextFieldNumber = 2;
    private string parsedStepText_ = "";
    /// <summary>
    //// Contains the parsed text of the Step being executed. 
    //// The paramters are replaced with placeholders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParsedStepText {
      get { return parsedStepText_; }
      set {
        parsedStepText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scenarioFailing" field.</summary>
    public const int ScenarioFailingFieldNumber = 3;
    private bool scenarioFailing_;
    /// <summary>
    //// Flag to indicate if the execution of the Scenario, containing the current Step, failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ScenarioFailing {
      get { return scenarioFailing_; }
      set {
        scenarioFailing_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Gauge.Messages.Parameter> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(34, global::Gauge.Messages.Parameter.Parser);
    private readonly pbc::RepeatedField<global::Gauge.Messages.Parameter> parameters_ = new pbc::RepeatedField<global::Gauge.Messages.Parameter>();
    /// <summary>
    //// Collection of parameters applicable to the current Step.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gauge.Messages.Parameter> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecuteStepRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecuteStepRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActualStepText != other.ActualStepText) return false;
      if (ParsedStepText != other.ParsedStepText) return false;
      if (ScenarioFailing != other.ScenarioFailing) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActualStepText.Length != 0) hash ^= ActualStepText.GetHashCode();
      if (ParsedStepText.Length != 0) hash ^= ParsedStepText.GetHashCode();
      if (ScenarioFailing != false) hash ^= ScenarioFailing.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActualStepText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActualStepText);
      }
      if (ParsedStepText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParsedStepText);
      }
      if (ScenarioFailing != false) {
        output.WriteRawTag(24);
        output.WriteBool(ScenarioFailing);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActualStepText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActualStepText);
      }
      if (ParsedStepText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParsedStepText);
      }
      if (ScenarioFailing != false) {
        size += 1 + 1;
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecuteStepRequest other) {
      if (other == null) {
        return;
      }
      if (other.ActualStepText.Length != 0) {
        ActualStepText = other.ActualStepText;
      }
      if (other.ParsedStepText.Length != 0) {
        ParsedStepText = other.ParsedStepText;
      }
      if (other.ScenarioFailing != false) {
        ScenarioFailing = other.ScenarioFailing;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActualStepText = input.ReadString();
            break;
          }
          case 18: {
            ParsedStepText = input.ReadString();
            break;
          }
          case 24: {
            ScenarioFailing = input.ReadBool();
            break;
          }
          case 34: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request sent ot the runner to check if given Step is valid. 
  //// The runner should check if there is an implementation defined for the given Step Text.
  /// </summary>
  public sealed partial class StepValidateRequest : pb::IMessage<StepValidateRequest> {
    private static readonly pb::MessageParser<StepValidateRequest> _parser = new pb::MessageParser<StepValidateRequest>(() => new StepValidateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepValidateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepValidateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepValidateRequest(StepValidateRequest other) : this() {
      stepText_ = other.stepText_;
      numberOfParameters_ = other.numberOfParameters_;
      StepValue = other.stepValue_ != null ? other.StepValue.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepValidateRequest Clone() {
      return new StepValidateRequest(this);
    }

    /// <summary>Field number for the "stepText" field.</summary>
    public const int StepTextFieldNumber = 1;
    private string stepText_ = "";
    /// <summary>
    //// The text is used to lookup Step implementation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StepText {
      get { return stepText_; }
      set {
        stepText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numberOfParameters" field.</summary>
    public const int NumberOfParametersFieldNumber = 2;
    private int numberOfParameters_;
    /// <summary>
    //// The number of paramters in the Step
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfParameters {
      get { return numberOfParameters_; }
      set {
        numberOfParameters_ = value;
      }
    }

    /// <summary>Field number for the "stepValue" field.</summary>
    public const int StepValueFieldNumber = 3;
    private global::Gauge.Messages.ProtoStepValue stepValue_;
    /// <summary>
    ////This is use to generate step implementation template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ProtoStepValue StepValue {
      get { return stepValue_; }
      set {
        stepValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepValidateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepValidateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StepText != other.StepText) return false;
      if (NumberOfParameters != other.NumberOfParameters) return false;
      if (!object.Equals(StepValue, other.StepValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StepText.Length != 0) hash ^= StepText.GetHashCode();
      if (NumberOfParameters != 0) hash ^= NumberOfParameters.GetHashCode();
      if (stepValue_ != null) hash ^= StepValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StepText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StepText);
      }
      if (NumberOfParameters != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumberOfParameters);
      }
      if (stepValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StepValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StepText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StepText);
      }
      if (NumberOfParameters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfParameters);
      }
      if (stepValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StepValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepValidateRequest other) {
      if (other == null) {
        return;
      }
      if (other.StepText.Length != 0) {
        StepText = other.StepText;
      }
      if (other.NumberOfParameters != 0) {
        NumberOfParameters = other.NumberOfParameters;
      }
      if (other.stepValue_ != null) {
        if (stepValue_ == null) {
          stepValue_ = new global::Gauge.Messages.ProtoStepValue();
        }
        StepValue.MergeFrom(other.StepValue);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StepText = input.ReadString();
            break;
          }
          case 16: {
            NumberOfParameters = input.ReadInt32();
            break;
          }
          case 26: {
            if (stepValue_ == null) {
              stepValue_ = new global::Gauge.Messages.ProtoStepValue();
            }
            input.ReadMessage(stepValue_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Response of StepValidateRequest.
  //// The runner tells the caller if the Request was valid, 
  //// i.e. an implementation exists for given Step text.
  //// Returns an error message if it is an error response.
  /// </summary>
  public sealed partial class StepValidateResponse : pb::IMessage<StepValidateResponse> {
    private static readonly pb::MessageParser<StepValidateResponse> _parser = new pb::MessageParser<StepValidateResponse>(() => new StepValidateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepValidateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepValidateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepValidateResponse(StepValidateResponse other) : this() {
      isValid_ = other.isValid_;
      errorMessage_ = other.errorMessage_;
      errorType_ = other.errorType_;
      suggestion_ = other.suggestion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepValidateResponse Clone() {
      return new StepValidateResponse(this);
    }

    /// <summary>Field number for the "isValid" field.</summary>
    public const int IsValidFieldNumber = 1;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorType" field.</summary>
    public const int ErrorTypeFieldNumber = 3;
    private global::Gauge.Messages.StepValidateResponse.Types.ErrorType errorType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepValidateResponse.Types.ErrorType ErrorType {
      get { return errorType_; }
      set {
        errorType_ = value;
      }
    }

    /// <summary>Field number for the "suggestion" field.</summary>
    public const int SuggestionFieldNumber = 4;
    private string suggestion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Suggestion {
      get { return suggestion_; }
      set {
        suggestion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepValidateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepValidateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsValid != other.IsValid) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (ErrorType != other.ErrorType) return false;
      if (Suggestion != other.Suggestion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (ErrorType != 0) hash ^= ErrorType.GetHashCode();
      if (Suggestion.Length != 0) hash ^= Suggestion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsValid != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsValid);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (ErrorType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ErrorType);
      }
      if (Suggestion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Suggestion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsValid != false) {
        size += 1 + 1;
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (ErrorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorType);
      }
      if (Suggestion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Suggestion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepValidateResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.ErrorType != 0) {
        ErrorType = other.ErrorType;
      }
      if (other.Suggestion.Length != 0) {
        Suggestion = other.Suggestion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsValid = input.ReadBool();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 24: {
            errorType_ = (global::Gauge.Messages.StepValidateResponse.Types.ErrorType) input.ReadEnum();
            break;
          }
          case 34: {
            Suggestion = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StepValidateResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorType {
        [pbr::OriginalName("STEP_IMPLEMENTATION_NOT_FOUND")] StepImplementationNotFound = 0,
        [pbr::OriginalName("DUPLICATE_STEP_IMPLEMENTATION")] DuplicateStepImplementation = 1,
      }

    }
    #endregion

  }

  /// <summary>
  //// Result of the Suite Execution.
  /// </summary>
  public sealed partial class SuiteExecutionResult : pb::IMessage<SuiteExecutionResult> {
    private static readonly pb::MessageParser<SuiteExecutionResult> _parser = new pb::MessageParser<SuiteExecutionResult>(() => new SuiteExecutionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuiteExecutionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuiteExecutionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuiteExecutionResult(SuiteExecutionResult other) : this() {
      SuiteResult = other.suiteResult_ != null ? other.SuiteResult.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuiteExecutionResult Clone() {
      return new SuiteExecutionResult(this);
    }

    /// <summary>Field number for the "suiteResult" field.</summary>
    public const int SuiteResultFieldNumber = 1;
    private global::Gauge.Messages.ProtoSuiteResult suiteResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ProtoSuiteResult SuiteResult {
      get { return suiteResult_; }
      set {
        suiteResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuiteExecutionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuiteExecutionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SuiteResult, other.SuiteResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (suiteResult_ != null) hash ^= SuiteResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (suiteResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SuiteResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (suiteResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SuiteResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuiteExecutionResult other) {
      if (other == null) {
        return;
      }
      if (other.suiteResult_ != null) {
        if (suiteResult_ == null) {
          suiteResult_ = new global::Gauge.Messages.ProtoSuiteResult();
        }
        SuiteResult.MergeFrom(other.SuiteResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (suiteResult_ == null) {
              suiteResult_ = new global::Gauge.Messages.ProtoSuiteResult();
            }
            input.ReadMessage(suiteResult_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Requests Gauge to give all Step Names.
  /// </summary>
  public sealed partial class StepNamesRequest : pb::IMessage<StepNamesRequest> {
    private static readonly pb::MessageParser<StepNamesRequest> _parser = new pb::MessageParser<StepNamesRequest>(() => new StepNamesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepNamesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNamesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNamesRequest(StepNamesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNamesRequest Clone() {
      return new StepNamesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepNamesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepNamesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepNamesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Response to StepNamesRequest
  /// </summary>
  public sealed partial class StepNamesResponse : pb::IMessage<StepNamesResponse> {
    private static readonly pb::MessageParser<StepNamesResponse> _parser = new pb::MessageParser<StepNamesResponse>(() => new StepNamesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepNamesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNamesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNamesResponse(StepNamesResponse other) : this() {
      steps_ = other.steps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNamesResponse Clone() {
      return new StepNamesResponse(this);
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_steps_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> steps_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// Collection of strings corresponding to Step texts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Steps {
      get { return steps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepNamesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepNamesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!steps_.Equals(other.steps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= steps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      steps_.WriteTo(output, _repeated_steps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepNamesResponse other) {
      if (other == null) {
        return;
      }
      steps_.Add(other.steps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request runner to initialize Scenario DataStore
  //// Scenario Datastore is reset after every Scenario execution.
  /// </summary>
  public sealed partial class ScenarioDataStoreInitRequest : pb::IMessage<ScenarioDataStoreInitRequest> {
    private static readonly pb::MessageParser<ScenarioDataStoreInitRequest> _parser = new pb::MessageParser<ScenarioDataStoreInitRequest>(() => new ScenarioDataStoreInitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScenarioDataStoreInitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioDataStoreInitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioDataStoreInitRequest(ScenarioDataStoreInitRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScenarioDataStoreInitRequest Clone() {
      return new ScenarioDataStoreInitRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScenarioDataStoreInitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScenarioDataStoreInitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScenarioDataStoreInitRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Request runner to initialize Spec DataStore
  //// Spec Datastore is reset after every Spec execution.
  /// </summary>
  public sealed partial class SpecDataStoreInitRequest : pb::IMessage<SpecDataStoreInitRequest> {
    private static readonly pb::MessageParser<SpecDataStoreInitRequest> _parser = new pb::MessageParser<SpecDataStoreInitRequest>(() => new SpecDataStoreInitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecDataStoreInitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecDataStoreInitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecDataStoreInitRequest(SpecDataStoreInitRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecDataStoreInitRequest Clone() {
      return new SpecDataStoreInitRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecDataStoreInitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecDataStoreInitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecDataStoreInitRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Request runner to initialize Suite DataStore
  //// Suite Datastore is reset after every Suite execution.
  /// </summary>
  public sealed partial class SuiteDataStoreInitRequest : pb::IMessage<SuiteDataStoreInitRequest> {
    private static readonly pb::MessageParser<SuiteDataStoreInitRequest> _parser = new pb::MessageParser<SuiteDataStoreInitRequest>(() => new SuiteDataStoreInitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuiteDataStoreInitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuiteDataStoreInitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuiteDataStoreInitRequest(SuiteDataStoreInitRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuiteDataStoreInitRequest Clone() {
      return new SuiteDataStoreInitRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuiteDataStoreInitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuiteDataStoreInitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuiteDataStoreInitRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Holds the new and old positions of a parameter.
  //// Used when refactoring a Step.
  /// </summary>
  public sealed partial class ParameterPosition : pb::IMessage<ParameterPosition> {
    private static readonly pb::MessageParser<ParameterPosition> _parser = new pb::MessageParser<ParameterPosition>(() => new ParameterPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParameterPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterPosition(ParameterPosition other) : this() {
      oldPosition_ = other.oldPosition_;
      newPosition_ = other.newPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterPosition Clone() {
      return new ParameterPosition(this);
    }

    /// <summary>Field number for the "oldPosition" field.</summary>
    public const int OldPositionFieldNumber = 1;
    private int oldPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OldPosition {
      get { return oldPosition_; }
      set {
        oldPosition_ = value;
      }
    }

    /// <summary>Field number for the "newPosition" field.</summary>
    public const int NewPositionFieldNumber = 2;
    private int newPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewPosition {
      get { return newPosition_; }
      set {
        newPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParameterPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParameterPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldPosition != other.OldPosition) return false;
      if (NewPosition != other.NewPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldPosition != 0) hash ^= OldPosition.GetHashCode();
      if (NewPosition != 0) hash ^= NewPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldPosition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OldPosition);
      }
      if (NewPosition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldPosition);
      }
      if (NewPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParameterPosition other) {
      if (other == null) {
        return;
      }
      if (other.OldPosition != 0) {
        OldPosition = other.OldPosition;
      }
      if (other.NewPosition != 0) {
        NewPosition = other.NewPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OldPosition = input.ReadInt32();
            break;
          }
          case 16: {
            NewPosition = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Tells the runner to refactor the specified Step.
  /// </summary>
  public sealed partial class RefactorRequest : pb::IMessage<RefactorRequest> {
    private static readonly pb::MessageParser<RefactorRequest> _parser = new pb::MessageParser<RefactorRequest>(() => new RefactorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefactorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefactorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefactorRequest(RefactorRequest other) : this() {
      OldStepValue = other.oldStepValue_ != null ? other.OldStepValue.Clone() : null;
      NewStepValue = other.newStepValue_ != null ? other.NewStepValue.Clone() : null;
      paramPositions_ = other.paramPositions_.Clone();
      saveChanges_ = other.saveChanges_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefactorRequest Clone() {
      return new RefactorRequest(this);
    }

    /// <summary>Field number for the "oldStepValue" field.</summary>
    public const int OldStepValueFieldNumber = 1;
    private global::Gauge.Messages.ProtoStepValue oldStepValue_;
    /// <summary>
    //// Old value, used to lookup Step to refactor
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ProtoStepValue OldStepValue {
      get { return oldStepValue_; }
      set {
        oldStepValue_ = value;
      }
    }

    /// <summary>Field number for the "newStepValue" field.</summary>
    public const int NewStepValueFieldNumber = 2;
    private global::Gauge.Messages.ProtoStepValue newStepValue_;
    /// <summary>
    //// New value, the to-be value of Step being refactored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ProtoStepValue NewStepValue {
      get { return newStepValue_; }
      set {
        newStepValue_ = value;
      }
    }

    /// <summary>Field number for the "paramPositions" field.</summary>
    public const int ParamPositionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Gauge.Messages.ParameterPosition> _repeated_paramPositions_codec
        = pb::FieldCodec.ForMessage(26, global::Gauge.Messages.ParameterPosition.Parser);
    private readonly pbc::RepeatedField<global::Gauge.Messages.ParameterPosition> paramPositions_ = new pbc::RepeatedField<global::Gauge.Messages.ParameterPosition>();
    /// <summary>
    //// Holds parameter positions of all parameters. Contains old and new parameter positions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gauge.Messages.ParameterPosition> ParamPositions {
      get { return paramPositions_; }
    }

    /// <summary>Field number for the "saveChanges" field.</summary>
    public const int SaveChangesFieldNumber = 4;
    private bool saveChanges_;
    /// <summary>
    //// If set to true, the refactored files should be saved to the file system before returning the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SaveChanges {
      get { return saveChanges_; }
      set {
        saveChanges_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefactorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefactorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OldStepValue, other.OldStepValue)) return false;
      if (!object.Equals(NewStepValue, other.NewStepValue)) return false;
      if(!paramPositions_.Equals(other.paramPositions_)) return false;
      if (SaveChanges != other.SaveChanges) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oldStepValue_ != null) hash ^= OldStepValue.GetHashCode();
      if (newStepValue_ != null) hash ^= NewStepValue.GetHashCode();
      hash ^= paramPositions_.GetHashCode();
      if (SaveChanges != false) hash ^= SaveChanges.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (oldStepValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldStepValue);
      }
      if (newStepValue_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewStepValue);
      }
      paramPositions_.WriteTo(output, _repeated_paramPositions_codec);
      if (SaveChanges != false) {
        output.WriteRawTag(32);
        output.WriteBool(SaveChanges);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oldStepValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldStepValue);
      }
      if (newStepValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewStepValue);
      }
      size += paramPositions_.CalculateSize(_repeated_paramPositions_codec);
      if (SaveChanges != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefactorRequest other) {
      if (other == null) {
        return;
      }
      if (other.oldStepValue_ != null) {
        if (oldStepValue_ == null) {
          oldStepValue_ = new global::Gauge.Messages.ProtoStepValue();
        }
        OldStepValue.MergeFrom(other.OldStepValue);
      }
      if (other.newStepValue_ != null) {
        if (newStepValue_ == null) {
          newStepValue_ = new global::Gauge.Messages.ProtoStepValue();
        }
        NewStepValue.MergeFrom(other.NewStepValue);
      }
      paramPositions_.Add(other.paramPositions_);
      if (other.SaveChanges != false) {
        SaveChanges = other.SaveChanges;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oldStepValue_ == null) {
              oldStepValue_ = new global::Gauge.Messages.ProtoStepValue();
            }
            input.ReadMessage(oldStepValue_);
            break;
          }
          case 18: {
            if (newStepValue_ == null) {
              newStepValue_ = new global::Gauge.Messages.ProtoStepValue();
            }
            input.ReadMessage(newStepValue_);
            break;
          }
          case 26: {
            paramPositions_.AddEntriesFrom(input, _repeated_paramPositions_codec);
            break;
          }
          case 32: {
            SaveChanges = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Give all file changes to be made to file system
  /// </summary>
  public sealed partial class FileChanges : pb::IMessage<FileChanges> {
    private static readonly pb::MessageParser<FileChanges> _parser = new pb::MessageParser<FileChanges>(() => new FileChanges());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileChanges> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChanges() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChanges(FileChanges other) : this() {
      fileName_ = other.fileName_;
      fileContent_ = other.fileContent_;
      diffs_ = other.diffs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileChanges Clone() {
      return new FileChanges(this);
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 1;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileContent" field.</summary>
    public const int FileContentFieldNumber = 2;
    private string fileContent_ = "";
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileContent {
      get { return fileContent_; }
      set {
        fileContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "diffs" field.</summary>
    public const int DiffsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Gauge.Messages.TextDiff> _repeated_diffs_codec
        = pb::FieldCodec.ForMessage(26, global::Gauge.Messages.TextDiff.Parser);
    private readonly pbc::RepeatedField<global::Gauge.Messages.TextDiff> diffs_ = new pbc::RepeatedField<global::Gauge.Messages.TextDiff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gauge.Messages.TextDiff> Diffs {
      get { return diffs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileChanges);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileChanges other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      if (FileContent != other.FileContent) return false;
      if(!diffs_.Equals(other.diffs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FileContent.Length != 0) hash ^= FileContent.GetHashCode();
      hash ^= diffs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (FileContent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileContent);
      }
      diffs_.WriteTo(output, _repeated_diffs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FileContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileContent);
      }
      size += diffs_.CalculateSize(_repeated_diffs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileChanges other) {
      if (other == null) {
        return;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FileContent.Length != 0) {
        FileContent = other.FileContent;
      }
      diffs_.Add(other.diffs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 18: {
            FileContent = input.ReadString();
            break;
          }
          case 26: {
            diffs_.AddEntriesFrom(input, _repeated_diffs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Response of a RefactorRequest
  /// </summary>
  public sealed partial class RefactorResponse : pb::IMessage<RefactorResponse> {
    private static readonly pb::MessageParser<RefactorResponse> _parser = new pb::MessageParser<RefactorResponse>(() => new RefactorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefactorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefactorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefactorResponse(RefactorResponse other) : this() {
      success_ = other.success_;
      error_ = other.error_;
      filesChanged_ = other.filesChanged_.Clone();
      fileChanges_ = other.fileChanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefactorResponse Clone() {
      return new RefactorResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    //// Flag indicating the success of Refactor operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    //// Error message, valid only if Refactor wasn't successful
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filesChanged" field.</summary>
    public const int FilesChangedFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_filesChanged_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> filesChanged_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// List of files that were affected because of the refactoring.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FilesChanged {
      get { return filesChanged_; }
    }

    /// <summary>Field number for the "fileChanges" field.</summary>
    public const int FileChangesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Gauge.Messages.FileChanges> _repeated_fileChanges_codec
        = pb::FieldCodec.ForMessage(34, global::Gauge.Messages.FileChanges.Parser);
    private readonly pbc::RepeatedField<global::Gauge.Messages.FileChanges> fileChanges_ = new pbc::RepeatedField<global::Gauge.Messages.FileChanges>();
    /// <summary>
    //// List of file changes to be made to successfully achieve refactoring.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gauge.Messages.FileChanges> FileChanges {
      get { return fileChanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefactorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefactorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Error != other.Error) return false;
      if(!filesChanged_.Equals(other.filesChanged_)) return false;
      if(!fileChanges_.Equals(other.fileChanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= filesChanged_.GetHashCode();
      hash ^= fileChanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      filesChanged_.WriteTo(output, _repeated_filesChanged_codec);
      fileChanges_.WriteTo(output, _repeated_fileChanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += filesChanged_.CalculateSize(_repeated_filesChanged_codec);
      size += fileChanges_.CalculateSize(_repeated_fileChanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefactorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      filesChanged_.Add(other.filesChanged_);
      fileChanges_.Add(other.fileChanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            filesChanged_.AddEntriesFrom(input, _repeated_filesChanged_codec);
            break;
          }
          case 34: {
            fileChanges_.AddEntriesFrom(input, _repeated_fileChanges_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request for details on a Single Step.
  /// </summary>
  public sealed partial class StepNameRequest : pb::IMessage<StepNameRequest> {
    private static readonly pb::MessageParser<StepNameRequest> _parser = new pb::MessageParser<StepNameRequest>(() => new StepNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNameRequest(StepNameRequest other) : this() {
      stepValue_ = other.stepValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNameRequest Clone() {
      return new StepNameRequest(this);
    }

    /// <summary>Field number for the "stepValue" field.</summary>
    public const int StepValueFieldNumber = 1;
    private string stepValue_ = "";
    /// <summary>
    //// Step text to lookup the Step. 
    //// This is the parsed step value, i.e. with placeholders for parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StepValue {
      get { return stepValue_; }
      set {
        stepValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StepValue != other.StepValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StepValue.Length != 0) hash ^= StepValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StepValue.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StepValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StepValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StepValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.StepValue.Length != 0) {
        StepValue = other.StepValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StepValue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Response to StepNameRequest.
  /// </summary>
  public sealed partial class StepNameResponse : pb::IMessage<StepNameResponse> {
    private static readonly pb::MessageParser<StepNameResponse> _parser = new pb::MessageParser<StepNameResponse>(() => new StepNameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepNameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNameResponse(StepNameResponse other) : this() {
      isStepPresent_ = other.isStepPresent_;
      stepName_ = other.stepName_.Clone();
      hasAlias_ = other.hasAlias_;
      fileName_ = other.fileName_;
      Span = other.span_ != null ? other.Span.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepNameResponse Clone() {
      return new StepNameResponse(this);
    }

    /// <summary>Field number for the "isStepPresent" field.</summary>
    public const int IsStepPresentFieldNumber = 1;
    private bool isStepPresent_;
    /// <summary>
    //// Flag indicating if there is a match for the given Step Text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStepPresent {
      get { return isStepPresent_; }
      set {
        isStepPresent_ = value;
      }
    }

    /// <summary>Field number for the "stepName" field.</summary>
    public const int StepNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_stepName_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> stepName_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// The Step name of the given step. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StepName {
      get { return stepName_; }
    }

    /// <summary>Field number for the "hasAlias" field.</summary>
    public const int HasAliasFieldNumber = 3;
    private bool hasAlias_;
    /// <summary>
    //// Flag indicating if the given Step is an alias.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAlias {
      get { return hasAlias_; }
      set {
        hasAlias_ = value;
      }
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 4;
    private string fileName_ = "";
    /// <summary>
    //// File name in which the step implementation exists
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "span" field.</summary>
    public const int SpanFieldNumber = 5;
    private global::Gauge.Messages.Span span_;
    /// <summary>
    //// Range of step
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.Span Span {
      get { return span_; }
      set {
        span_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepNameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepNameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsStepPresent != other.IsStepPresent) return false;
      if(!stepName_.Equals(other.stepName_)) return false;
      if (HasAlias != other.HasAlias) return false;
      if (FileName != other.FileName) return false;
      if (!object.Equals(Span, other.Span)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsStepPresent != false) hash ^= IsStepPresent.GetHashCode();
      hash ^= stepName_.GetHashCode();
      if (HasAlias != false) hash ^= HasAlias.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (span_ != null) hash ^= Span.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsStepPresent != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsStepPresent);
      }
      stepName_.WriteTo(output, _repeated_stepName_codec);
      if (HasAlias != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasAlias);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FileName);
      }
      if (span_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Span);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsStepPresent != false) {
        size += 1 + 1;
      }
      size += stepName_.CalculateSize(_repeated_stepName_codec);
      if (HasAlias != false) {
        size += 1 + 1;
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (span_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Span);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepNameResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsStepPresent != false) {
        IsStepPresent = other.IsStepPresent;
      }
      stepName_.Add(other.stepName_);
      if (other.HasAlias != false) {
        HasAlias = other.HasAlias;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.span_ != null) {
        if (span_ == null) {
          span_ = new global::Gauge.Messages.Span();
        }
        Span.MergeFrom(other.Span);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsStepPresent = input.ReadBool();
            break;
          }
          case 18: {
            stepName_.AddEntriesFrom(input, _repeated_stepName_codec);
            break;
          }
          case 24: {
            HasAlias = input.ReadBool();
            break;
          }
          case 34: {
            FileName = input.ReadString();
            break;
          }
          case 42: {
            if (span_ == null) {
              span_ = new global::Gauge.Messages.Span();
            }
            input.ReadMessage(span_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Response when a unsupported message request is sent.
  /// </summary>
  public sealed partial class UnsupportedMessageResponse : pb::IMessage<UnsupportedMessageResponse> {
    private static readonly pb::MessageParser<UnsupportedMessageResponse> _parser = new pb::MessageParser<UnsupportedMessageResponse>(() => new UnsupportedMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsupportedMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsupportedMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsupportedMessageResponse(UnsupportedMessageResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsupportedMessageResponse Clone() {
      return new UnsupportedMessageResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsupportedMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsupportedMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsupportedMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request for caching a file.
  //// Gauge sends this request when running in LSP mode,
  //// so runner can cache file contents present on the client(an editor).
  /// </summary>
  public sealed partial class CacheFileRequest : pb::IMessage<CacheFileRequest> {
    private static readonly pb::MessageParser<CacheFileRequest> _parser = new pb::MessageParser<CacheFileRequest>(() => new CacheFileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CacheFileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CacheFileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CacheFileRequest(CacheFileRequest other) : this() {
      content_ = other.content_;
      filePath_ = other.filePath_;
      isClosed_ = other.isClosed_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CacheFileRequest Clone() {
      return new CacheFileRequest(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    /// <summary>
    //// File content of the file to be cached
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 2;
    private string filePath_ = "";
    /// <summary>
    //// File path of the file to be cached
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isClosed" field.</summary>
    public const int IsClosedFieldNumber = 3;
    private bool isClosed_;
    /// <summary>
    //// Specifies if the file is closed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClosed {
      get { return isClosed_; }
      set {
        isClosed_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Gauge.Messages.CacheFileRequest.Types.FileStatus status_ = 0;
    /// <summary>
    //// Specifies the status of the file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.CacheFileRequest.Types.FileStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CacheFileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CacheFileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (FilePath != other.FilePath) return false;
      if (IsClosed != other.IsClosed) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (IsClosed != false) hash ^= IsClosed.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FilePath);
      }
      if (IsClosed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsClosed);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (IsClosed != false) {
        size += 1 + 1;
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CacheFileRequest other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.IsClosed != false) {
        IsClosed = other.IsClosed;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 18: {
            FilePath = input.ReadString();
            break;
          }
          case 24: {
            IsClosed = input.ReadBool();
            break;
          }
          case 32: {
            status_ = (global::Gauge.Messages.CacheFileRequest.Types.FileStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CacheFileRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum FileStatus {
        /// <summary>
        //// The file content was changed in the client
        /// </summary>
        [pbr::OriginalName("CHANGED")] Changed = 0,
        /// <summary>
        //// The file was closed in the client
        /// </summary>
        [pbr::OriginalName("CLOSED")] Closed = 1,
        /// <summary>
        //// The file was created on the client
        /// </summary>
        [pbr::OriginalName("CREATED")] Created = 2,
        /// <summary>
        //// The file was deleted on the client
        /// </summary>
        [pbr::OriginalName("DELETED")] Deleted = 3,
        /// <summary>
        //// The file is opened in the client
        /// </summary>
        [pbr::OriginalName("OPENED")] Opened = 4,
      }

    }
    #endregion

  }

  /// <summary>
  //// Request for find step positions
  /// </summary>
  public sealed partial class StepPositionsRequest : pb::IMessage<StepPositionsRequest> {
    private static readonly pb::MessageParser<StepPositionsRequest> _parser = new pb::MessageParser<StepPositionsRequest>(() => new StepPositionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepPositionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepPositionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepPositionsRequest(StepPositionsRequest other) : this() {
      filePath_ = other.filePath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepPositionsRequest Clone() {
      return new StepPositionsRequest(this);
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    /// <summary>
    //// Get step positions for file path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepPositionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepPositionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepPositionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Response for find step positions
  /// </summary>
  public sealed partial class StepPositionsResponse : pb::IMessage<StepPositionsResponse> {
    private static readonly pb::MessageParser<StepPositionsResponse> _parser = new pb::MessageParser<StepPositionsResponse>(() => new StepPositionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepPositionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepPositionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepPositionsResponse(StepPositionsResponse other) : this() {
      stepPositions_ = other.stepPositions_.Clone();
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepPositionsResponse Clone() {
      return new StepPositionsResponse(this);
    }

    /// <summary>Field number for the "stepPositions" field.</summary>
    public const int StepPositionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gauge.Messages.StepPositionsResponse.Types.StepPosition> _repeated_stepPositions_codec
        = pb::FieldCodec.ForMessage(10, global::Gauge.Messages.StepPositionsResponse.Types.StepPosition.Parser);
    private readonly pbc::RepeatedField<global::Gauge.Messages.StepPositionsResponse.Types.StepPosition> stepPositions_ = new pbc::RepeatedField<global::Gauge.Messages.StepPositionsResponse.Types.StepPosition>();
    /// <summary>
    //// Step Position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gauge.Messages.StepPositionsResponse.Types.StepPosition> StepPositions {
      get { return stepPositions_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    //// Error message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepPositionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepPositionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stepPositions_.Equals(other.stepPositions_)) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stepPositions_.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stepPositions_.WriteTo(output, _repeated_stepPositions_codec);
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stepPositions_.CalculateSize(_repeated_stepPositions_codec);
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepPositionsResponse other) {
      if (other == null) {
        return;
      }
      stepPositions_.Add(other.stepPositions_);
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stepPositions_.AddEntriesFrom(input, _repeated_stepPositions_codec);
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StepPositionsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      //// Step position for each step implementation
      /// </summary>
      public sealed partial class StepPosition : pb::IMessage<StepPosition> {
        private static readonly pb::MessageParser<StepPosition> _parser = new pb::MessageParser<StepPosition>(() => new StepPosition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StepPosition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Gauge.Messages.StepPositionsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StepPosition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StepPosition(StepPosition other) : this() {
          stepValue_ = other.stepValue_;
          Span = other.span_ != null ? other.Span.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StepPosition Clone() {
          return new StepPosition(this);
        }

        /// <summary>Field number for the "stepValue" field.</summary>
        public const int StepValueFieldNumber = 1;
        private string stepValue_ = "";
        /// <summary>
        //// Step Value
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StepValue {
          get { return stepValue_; }
          set {
            stepValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "span" field.</summary>
        public const int SpanFieldNumber = 2;
        private global::Gauge.Messages.Span span_;
        /// <summary>
        //// Range of step
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Gauge.Messages.Span Span {
          get { return span_; }
          set {
            span_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StepPosition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StepPosition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StepValue != other.StepValue) return false;
          if (!object.Equals(Span, other.Span)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (StepValue.Length != 0) hash ^= StepValue.GetHashCode();
          if (span_ != null) hash ^= Span.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (StepValue.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(StepValue);
          }
          if (span_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Span);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (StepValue.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StepValue);
          }
          if (span_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Span);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StepPosition other) {
          if (other == null) {
            return;
          }
          if (other.StepValue.Length != 0) {
            StepValue = other.StepValue;
          }
          if (other.span_ != null) {
            if (span_ == null) {
              span_ = new global::Gauge.Messages.Span();
            }
            Span.MergeFrom(other.Span);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                StepValue = input.ReadString();
                break;
              }
              case 18: {
                if (span_ == null) {
                  span_ = new global::Gauge.Messages.Span();
                }
                input.ReadMessage(span_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  //// Request for getting Implementation file glob pattern
  /// </summary>
  public sealed partial class ImplementationFileGlobPatternRequest : pb::IMessage<ImplementationFileGlobPatternRequest> {
    private static readonly pb::MessageParser<ImplementationFileGlobPatternRequest> _parser = new pb::MessageParser<ImplementationFileGlobPatternRequest>(() => new ImplementationFileGlobPatternRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImplementationFileGlobPatternRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileGlobPatternRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileGlobPatternRequest(ImplementationFileGlobPatternRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileGlobPatternRequest Clone() {
      return new ImplementationFileGlobPatternRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImplementationFileGlobPatternRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImplementationFileGlobPatternRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImplementationFileGlobPatternRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Response for getting Implementation file glob pattern
  /// </summary>
  public sealed partial class ImplementationFileGlobPatternResponse : pb::IMessage<ImplementationFileGlobPatternResponse> {
    private static readonly pb::MessageParser<ImplementationFileGlobPatternResponse> _parser = new pb::MessageParser<ImplementationFileGlobPatternResponse>(() => new ImplementationFileGlobPatternResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImplementationFileGlobPatternResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileGlobPatternResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileGlobPatternResponse(ImplementationFileGlobPatternResponse other) : this() {
      globPatterns_ = other.globPatterns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileGlobPatternResponse Clone() {
      return new ImplementationFileGlobPatternResponse(this);
    }

    /// <summary>Field number for the "globPatterns" field.</summary>
    public const int GlobPatternsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_globPatterns_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> globPatterns_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// List of implementation file glob patterns
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GlobPatterns {
      get { return globPatterns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImplementationFileGlobPatternResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImplementationFileGlobPatternResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!globPatterns_.Equals(other.globPatterns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= globPatterns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      globPatterns_.WriteTo(output, _repeated_globPatterns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += globPatterns_.CalculateSize(_repeated_globPatterns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImplementationFileGlobPatternResponse other) {
      if (other == null) {
        return;
      }
      globPatterns_.Add(other.globPatterns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            globPatterns_.AddEntriesFrom(input, _repeated_globPatterns_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request for getting Implementation file list
  /// </summary>
  public sealed partial class ImplementationFileListRequest : pb::IMessage<ImplementationFileListRequest> {
    private static readonly pb::MessageParser<ImplementationFileListRequest> _parser = new pb::MessageParser<ImplementationFileListRequest>(() => new ImplementationFileListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImplementationFileListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileListRequest(ImplementationFileListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileListRequest Clone() {
      return new ImplementationFileListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImplementationFileListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImplementationFileListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImplementationFileListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  //// Response for getting Implementation file list
  /// </summary>
  public sealed partial class ImplementationFileListResponse : pb::IMessage<ImplementationFileListResponse> {
    private static readonly pb::MessageParser<ImplementationFileListResponse> _parser = new pb::MessageParser<ImplementationFileListResponse>(() => new ImplementationFileListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImplementationFileListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileListResponse(ImplementationFileListResponse other) : this() {
      implementationFilePaths_ = other.implementationFilePaths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImplementationFileListResponse Clone() {
      return new ImplementationFileListResponse(this);
    }

    /// <summary>Field number for the "implementationFilePaths" field.</summary>
    public const int ImplementationFilePathsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_implementationFilePaths_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> implementationFilePaths_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// List of implementation files
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImplementationFilePaths {
      get { return implementationFilePaths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImplementationFileListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImplementationFileListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!implementationFilePaths_.Equals(other.implementationFilePaths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= implementationFilePaths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      implementationFilePaths_.WriteTo(output, _repeated_implementationFilePaths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += implementationFilePaths_.CalculateSize(_repeated_implementationFilePaths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImplementationFileListResponse other) {
      if (other == null) {
        return;
      }
      implementationFilePaths_.Add(other.implementationFilePaths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            implementationFilePaths_.AddEntriesFrom(input, _repeated_implementationFilePaths_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Request for injecting code snippet into implementation file
  /// </summary>
  public sealed partial class StubImplementationCodeRequest : pb::IMessage<StubImplementationCodeRequest> {
    private static readonly pb::MessageParser<StubImplementationCodeRequest> _parser = new pb::MessageParser<StubImplementationCodeRequest>(() => new StubImplementationCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StubImplementationCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StubImplementationCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StubImplementationCodeRequest(StubImplementationCodeRequest other) : this() {
      implementationFilePath_ = other.implementationFilePath_;
      codes_ = other.codes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StubImplementationCodeRequest Clone() {
      return new StubImplementationCodeRequest(this);
    }

    /// <summary>Field number for the "implementationFilePath" field.</summary>
    public const int ImplementationFilePathFieldNumber = 1;
    private string implementationFilePath_ = "";
    /// <summary>
    //// Path of the file where the new stub implementation will be added
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImplementationFilePath {
      get { return implementationFilePath_; }
      set {
        implementationFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "codes" field.</summary>
    public const int CodesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_codes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> codes_ = new pbc::RepeatedField<string>();
    /// <summary>
    //// List of implementation codes to be appended to implementation file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Codes {
      get { return codes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StubImplementationCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StubImplementationCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImplementationFilePath != other.ImplementationFilePath) return false;
      if(!codes_.Equals(other.codes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImplementationFilePath.Length != 0) hash ^= ImplementationFilePath.GetHashCode();
      hash ^= codes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImplementationFilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImplementationFilePath);
      }
      codes_.WriteTo(output, _repeated_codes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImplementationFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImplementationFilePath);
      }
      size += codes_.CalculateSize(_repeated_codes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StubImplementationCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ImplementationFilePath.Length != 0) {
        ImplementationFilePath = other.ImplementationFilePath;
      }
      codes_.Add(other.codes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImplementationFilePath = input.ReadString();
            break;
          }
          case 18: {
            codes_.AddEntriesFrom(input, _repeated_codes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// A Single Replace Diff Element to be applied
  /// </summary>
  public sealed partial class TextDiff : pb::IMessage<TextDiff> {
    private static readonly pb::MessageParser<TextDiff> _parser = new pb::MessageParser<TextDiff>(() => new TextDiff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextDiff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextDiff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextDiff(TextDiff other) : this() {
      Span = other.span_ != null ? other.Span.Clone() : null;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextDiff Clone() {
      return new TextDiff(this);
    }

    /// <summary>Field number for the "span" field.</summary>
    public const int SpanFieldNumber = 1;
    private global::Gauge.Messages.Span span_;
    /// <summary>
    //// Range of file to be replaced
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.Span Span {
      get { return span_; }
      set {
        span_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    //// New content to replace the content in the span
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextDiff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextDiff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Span, other.Span)) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (span_ != null) hash ^= Span.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (span_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Span);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (span_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Span);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextDiff other) {
      if (other == null) {
        return;
      }
      if (other.span_ != null) {
        if (span_ == null) {
          span_ = new global::Gauge.Messages.Span();
        }
        Span.MergeFrom(other.Span);
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (span_ == null) {
              span_ = new global::Gauge.Messages.Span();
            }
            input.ReadMessage(span_);
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// Diffs to be applied to a file
  /// </summary>
  public sealed partial class FileDiff : pb::IMessage<FileDiff> {
    private static readonly pb::MessageParser<FileDiff> _parser = new pb::MessageParser<FileDiff>(() => new FileDiff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileDiff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDiff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDiff(FileDiff other) : this() {
      filePath_ = other.filePath_;
      textDiffs_ = other.textDiffs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDiff Clone() {
      return new FileDiff(this);
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    /// <summary>
    //// File Path where the new content needs to be put in
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "textDiffs" field.</summary>
    public const int TextDiffsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Gauge.Messages.TextDiff> _repeated_textDiffs_codec
        = pb::FieldCodec.ForMessage(18, global::Gauge.Messages.TextDiff.Parser);
    private readonly pbc::RepeatedField<global::Gauge.Messages.TextDiff> textDiffs_ = new pbc::RepeatedField<global::Gauge.Messages.TextDiff>();
    /// <summary>
    //// The diffs which need to be applied to this file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gauge.Messages.TextDiff> TextDiffs {
      get { return textDiffs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileDiff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileDiff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      if(!textDiffs_.Equals(other.textDiffs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      hash ^= textDiffs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      textDiffs_.WriteTo(output, _repeated_textDiffs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      size += textDiffs_.CalculateSize(_repeated_textDiffs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileDiff other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      textDiffs_.Add(other.textDiffs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 18: {
            textDiffs_.AddEntriesFrom(input, _repeated_textDiffs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //// This is the message which gets transferred all the time
  //// with proper message type set
  //// One of the Request/Response fields will have value, depending on the MessageType set.
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gauge.Messages.MessagesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      messageType_ = other.messageType_;
      messageId_ = other.messageId_;
      ExecutionStartingRequest = other.executionStartingRequest_ != null ? other.ExecutionStartingRequest.Clone() : null;
      SpecExecutionStartingRequest = other.specExecutionStartingRequest_ != null ? other.SpecExecutionStartingRequest.Clone() : null;
      SpecExecutionEndingRequest = other.specExecutionEndingRequest_ != null ? other.SpecExecutionEndingRequest.Clone() : null;
      ScenarioExecutionStartingRequest = other.scenarioExecutionStartingRequest_ != null ? other.ScenarioExecutionStartingRequest.Clone() : null;
      ScenarioExecutionEndingRequest = other.scenarioExecutionEndingRequest_ != null ? other.ScenarioExecutionEndingRequest.Clone() : null;
      StepExecutionStartingRequest = other.stepExecutionStartingRequest_ != null ? other.StepExecutionStartingRequest.Clone() : null;
      StepExecutionEndingRequest = other.stepExecutionEndingRequest_ != null ? other.StepExecutionEndingRequest.Clone() : null;
      ExecuteStepRequest = other.executeStepRequest_ != null ? other.ExecuteStepRequest.Clone() : null;
      ExecutionEndingRequest = other.executionEndingRequest_ != null ? other.ExecutionEndingRequest.Clone() : null;
      StepValidateRequest = other.stepValidateRequest_ != null ? other.StepValidateRequest.Clone() : null;
      StepValidateResponse = other.stepValidateResponse_ != null ? other.StepValidateResponse.Clone() : null;
      ExecutionStatusResponse = other.executionStatusResponse_ != null ? other.ExecutionStatusResponse.Clone() : null;
      StepNamesRequest = other.stepNamesRequest_ != null ? other.StepNamesRequest.Clone() : null;
      StepNamesResponse = other.stepNamesResponse_ != null ? other.StepNamesResponse.Clone() : null;
      SuiteExecutionResult = other.suiteExecutionResult_ != null ? other.SuiteExecutionResult.Clone() : null;
      KillProcessRequest = other.killProcessRequest_ != null ? other.KillProcessRequest.Clone() : null;
      ScenarioDataStoreInitRequest = other.scenarioDataStoreInitRequest_ != null ? other.ScenarioDataStoreInitRequest.Clone() : null;
      SpecDataStoreInitRequest = other.specDataStoreInitRequest_ != null ? other.SpecDataStoreInitRequest.Clone() : null;
      SuiteDataStoreInitRequest = other.suiteDataStoreInitRequest_ != null ? other.SuiteDataStoreInitRequest.Clone() : null;
      StepNameRequest = other.stepNameRequest_ != null ? other.StepNameRequest.Clone() : null;
      StepNameResponse = other.stepNameResponse_ != null ? other.StepNameResponse.Clone() : null;
      RefactorRequest = other.refactorRequest_ != null ? other.RefactorRequest.Clone() : null;
      RefactorResponse = other.refactorResponse_ != null ? other.RefactorResponse.Clone() : null;
      UnsupportedMessageResponse = other.unsupportedMessageResponse_ != null ? other.UnsupportedMessageResponse.Clone() : null;
      CacheFileRequest = other.cacheFileRequest_ != null ? other.CacheFileRequest.Clone() : null;
      StepPositionsRequest = other.stepPositionsRequest_ != null ? other.StepPositionsRequest.Clone() : null;
      StepPositionsResponse = other.stepPositionsResponse_ != null ? other.StepPositionsResponse.Clone() : null;
      ImplementationFileListRequest = other.implementationFileListRequest_ != null ? other.ImplementationFileListRequest.Clone() : null;
      ImplementationFileListResponse = other.implementationFileListResponse_ != null ? other.ImplementationFileListResponse.Clone() : null;
      StubImplementationCodeRequest = other.stubImplementationCodeRequest_ != null ? other.StubImplementationCodeRequest.Clone() : null;
      FileDiff = other.fileDiff_ != null ? other.FileDiff.Clone() : null;
      ImplementationFileGlobPatternRequest = other.implementationFileGlobPatternRequest_ != null ? other.ImplementationFileGlobPatternRequest.Clone() : null;
      ImplementationFileGlobPatternResponse = other.implementationFileGlobPatternResponse_ != null ? other.ImplementationFileGlobPatternResponse.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Gauge.Messages.Message.Types.MessageType messageType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.Message.Types.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "messageId" field.</summary>
    public const int MessageIdFieldNumber = 2;
    private long messageId_;
    /// <summary>
    //// A unique id to represent this message. A response to the message should copy over this value.
    //// This is used to synchronize messages &amp; responses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "executionStartingRequest" field.</summary>
    public const int ExecutionStartingRequestFieldNumber = 3;
    private global::Gauge.Messages.ExecutionStartingRequest executionStartingRequest_;
    /// <summary>
    //// [ExecutionStartingRequest](#gauge.messages.ExecutionStartingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionStartingRequest ExecutionStartingRequest {
      get { return executionStartingRequest_; }
      set {
        executionStartingRequest_ = value;
      }
    }

    /// <summary>Field number for the "specExecutionStartingRequest" field.</summary>
    public const int SpecExecutionStartingRequestFieldNumber = 4;
    private global::Gauge.Messages.SpecExecutionStartingRequest specExecutionStartingRequest_;
    /// <summary>
    //// [SpecExecutionStartingRequest](#gauge.messages.SpecExecutionStartingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.SpecExecutionStartingRequest SpecExecutionStartingRequest {
      get { return specExecutionStartingRequest_; }
      set {
        specExecutionStartingRequest_ = value;
      }
    }

    /// <summary>Field number for the "specExecutionEndingRequest" field.</summary>
    public const int SpecExecutionEndingRequestFieldNumber = 5;
    private global::Gauge.Messages.SpecExecutionEndingRequest specExecutionEndingRequest_;
    /// <summary>
    //// [SpecExecutionEndingRequest](#gauge.messages.SpecExecutionEndingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.SpecExecutionEndingRequest SpecExecutionEndingRequest {
      get { return specExecutionEndingRequest_; }
      set {
        specExecutionEndingRequest_ = value;
      }
    }

    /// <summary>Field number for the "scenarioExecutionStartingRequest" field.</summary>
    public const int ScenarioExecutionStartingRequestFieldNumber = 6;
    private global::Gauge.Messages.ScenarioExecutionStartingRequest scenarioExecutionStartingRequest_;
    /// <summary>
    //// [ScenarioExecutionStartingRequest](#gauge.messages.ScenarioExecutionStartingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ScenarioExecutionStartingRequest ScenarioExecutionStartingRequest {
      get { return scenarioExecutionStartingRequest_; }
      set {
        scenarioExecutionStartingRequest_ = value;
      }
    }

    /// <summary>Field number for the "scenarioExecutionEndingRequest" field.</summary>
    public const int ScenarioExecutionEndingRequestFieldNumber = 7;
    private global::Gauge.Messages.ScenarioExecutionEndingRequest scenarioExecutionEndingRequest_;
    /// <summary>
    //// [ScenarioExecutionEndingRequest](#gauge.messages.ScenarioExecutionEndingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ScenarioExecutionEndingRequest ScenarioExecutionEndingRequest {
      get { return scenarioExecutionEndingRequest_; }
      set {
        scenarioExecutionEndingRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepExecutionStartingRequest" field.</summary>
    public const int StepExecutionStartingRequestFieldNumber = 8;
    private global::Gauge.Messages.StepExecutionStartingRequest stepExecutionStartingRequest_;
    /// <summary>
    //// [StepExecutionStartingRequest](#gauge.messages.StepExecutionStartingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepExecutionStartingRequest StepExecutionStartingRequest {
      get { return stepExecutionStartingRequest_; }
      set {
        stepExecutionStartingRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepExecutionEndingRequest" field.</summary>
    public const int StepExecutionEndingRequestFieldNumber = 9;
    private global::Gauge.Messages.StepExecutionEndingRequest stepExecutionEndingRequest_;
    /// <summary>
    //// [StepExecutionEndingRequest](#gauge.messages.StepExecutionEndingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepExecutionEndingRequest StepExecutionEndingRequest {
      get { return stepExecutionEndingRequest_; }
      set {
        stepExecutionEndingRequest_ = value;
      }
    }

    /// <summary>Field number for the "executeStepRequest" field.</summary>
    public const int ExecuteStepRequestFieldNumber = 10;
    private global::Gauge.Messages.ExecuteStepRequest executeStepRequest_;
    /// <summary>
    //// [ExecuteStepRequest](#gauge.messages.ExecuteStepRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecuteStepRequest ExecuteStepRequest {
      get { return executeStepRequest_; }
      set {
        executeStepRequest_ = value;
      }
    }

    /// <summary>Field number for the "executionEndingRequest" field.</summary>
    public const int ExecutionEndingRequestFieldNumber = 11;
    private global::Gauge.Messages.ExecutionEndingRequest executionEndingRequest_;
    /// <summary>
    //// [ExecutionEndingRequest](#gauge.messages.ExecutionEndingRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionEndingRequest ExecutionEndingRequest {
      get { return executionEndingRequest_; }
      set {
        executionEndingRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepValidateRequest" field.</summary>
    public const int StepValidateRequestFieldNumber = 12;
    private global::Gauge.Messages.StepValidateRequest stepValidateRequest_;
    /// <summary>
    //// [StepValidateRequest](#gauge.messages.StepValidateRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepValidateRequest StepValidateRequest {
      get { return stepValidateRequest_; }
      set {
        stepValidateRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepValidateResponse" field.</summary>
    public const int StepValidateResponseFieldNumber = 13;
    private global::Gauge.Messages.StepValidateResponse stepValidateResponse_;
    /// <summary>
    //// [StepValidateResponse](#gauge.messages.StepValidateResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepValidateResponse StepValidateResponse {
      get { return stepValidateResponse_; }
      set {
        stepValidateResponse_ = value;
      }
    }

    /// <summary>Field number for the "executionStatusResponse" field.</summary>
    public const int ExecutionStatusResponseFieldNumber = 14;
    private global::Gauge.Messages.ExecutionStatusResponse executionStatusResponse_;
    /// <summary>
    //// [ExecutionStatusResponse](#gauge.messages.ExecutionStatusResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ExecutionStatusResponse ExecutionStatusResponse {
      get { return executionStatusResponse_; }
      set {
        executionStatusResponse_ = value;
      }
    }

    /// <summary>Field number for the "stepNamesRequest" field.</summary>
    public const int StepNamesRequestFieldNumber = 15;
    private global::Gauge.Messages.StepNamesRequest stepNamesRequest_;
    /// <summary>
    //// [StepNamesRequest](#gauge.messages.StepNamesRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepNamesRequest StepNamesRequest {
      get { return stepNamesRequest_; }
      set {
        stepNamesRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepNamesResponse" field.</summary>
    public const int StepNamesResponseFieldNumber = 16;
    private global::Gauge.Messages.StepNamesResponse stepNamesResponse_;
    /// <summary>
    //// [StepNamesResponse](#gauge.messages.StepNamesResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepNamesResponse StepNamesResponse {
      get { return stepNamesResponse_; }
      set {
        stepNamesResponse_ = value;
      }
    }

    /// <summary>Field number for the "suiteExecutionResult" field.</summary>
    public const int SuiteExecutionResultFieldNumber = 17;
    private global::Gauge.Messages.SuiteExecutionResult suiteExecutionResult_;
    /// <summary>
    //// [SuiteExecutionResult ](#gauge.messages.SuiteExecutionResult )
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.SuiteExecutionResult SuiteExecutionResult {
      get { return suiteExecutionResult_; }
      set {
        suiteExecutionResult_ = value;
      }
    }

    /// <summary>Field number for the "killProcessRequest" field.</summary>
    public const int KillProcessRequestFieldNumber = 18;
    private global::Gauge.Messages.KillProcessRequest killProcessRequest_;
    /// <summary>
    //// [KillProcessRequest](#gauge.messages.KillProcessRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.KillProcessRequest KillProcessRequest {
      get { return killProcessRequest_; }
      set {
        killProcessRequest_ = value;
      }
    }

    /// <summary>Field number for the "scenarioDataStoreInitRequest" field.</summary>
    public const int ScenarioDataStoreInitRequestFieldNumber = 19;
    private global::Gauge.Messages.ScenarioDataStoreInitRequest scenarioDataStoreInitRequest_;
    /// <summary>
    //// [ScenarioDataStoreInitRequest](#gauge.messages.ScenarioDataStoreInitRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ScenarioDataStoreInitRequest ScenarioDataStoreInitRequest {
      get { return scenarioDataStoreInitRequest_; }
      set {
        scenarioDataStoreInitRequest_ = value;
      }
    }

    /// <summary>Field number for the "specDataStoreInitRequest" field.</summary>
    public const int SpecDataStoreInitRequestFieldNumber = 20;
    private global::Gauge.Messages.SpecDataStoreInitRequest specDataStoreInitRequest_;
    /// <summary>
    //// [SpecDataStoreInitRequest](#gauge.messages.SpecDataStoreInitRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.SpecDataStoreInitRequest SpecDataStoreInitRequest {
      get { return specDataStoreInitRequest_; }
      set {
        specDataStoreInitRequest_ = value;
      }
    }

    /// <summary>Field number for the "suiteDataStoreInitRequest" field.</summary>
    public const int SuiteDataStoreInitRequestFieldNumber = 21;
    private global::Gauge.Messages.SuiteDataStoreInitRequest suiteDataStoreInitRequest_;
    /// <summary>
    //// [SuiteDataStoreInitRequest](#gauge.messages.SuiteDataStoreInitRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.SuiteDataStoreInitRequest SuiteDataStoreInitRequest {
      get { return suiteDataStoreInitRequest_; }
      set {
        suiteDataStoreInitRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepNameRequest" field.</summary>
    public const int StepNameRequestFieldNumber = 22;
    private global::Gauge.Messages.StepNameRequest stepNameRequest_;
    /// <summary>
    //// [StepNameRequest](#gauge.messages.StepNameRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepNameRequest StepNameRequest {
      get { return stepNameRequest_; }
      set {
        stepNameRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepNameResponse" field.</summary>
    public const int StepNameResponseFieldNumber = 23;
    private global::Gauge.Messages.StepNameResponse stepNameResponse_;
    /// <summary>
    //// [StepNameResponse](#gauge.messages.StepNameResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepNameResponse StepNameResponse {
      get { return stepNameResponse_; }
      set {
        stepNameResponse_ = value;
      }
    }

    /// <summary>Field number for the "refactorRequest" field.</summary>
    public const int RefactorRequestFieldNumber = 24;
    private global::Gauge.Messages.RefactorRequest refactorRequest_;
    /// <summary>
    //// [RefactorRequest](#gauge.messages.RefactorRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.RefactorRequest RefactorRequest {
      get { return refactorRequest_; }
      set {
        refactorRequest_ = value;
      }
    }

    /// <summary>Field number for the "refactorResponse" field.</summary>
    public const int RefactorResponseFieldNumber = 25;
    private global::Gauge.Messages.RefactorResponse refactorResponse_;
    /// <summary>
    //// [RefactorResponse](#gauge.messages.RefactorResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.RefactorResponse RefactorResponse {
      get { return refactorResponse_; }
      set {
        refactorResponse_ = value;
      }
    }

    /// <summary>Field number for the "unsupportedMessageResponse" field.</summary>
    public const int UnsupportedMessageResponseFieldNumber = 26;
    private global::Gauge.Messages.UnsupportedMessageResponse unsupportedMessageResponse_;
    /// <summary>
    //// [UnsupportedMessageResponse](#gauge.messages.UnsupportedMessageResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.UnsupportedMessageResponse UnsupportedMessageResponse {
      get { return unsupportedMessageResponse_; }
      set {
        unsupportedMessageResponse_ = value;
      }
    }

    /// <summary>Field number for the "cacheFileRequest" field.</summary>
    public const int CacheFileRequestFieldNumber = 27;
    private global::Gauge.Messages.CacheFileRequest cacheFileRequest_;
    /// <summary>
    //// [CacheFileRequest](#gauge.messages.CacheFileRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.CacheFileRequest CacheFileRequest {
      get { return cacheFileRequest_; }
      set {
        cacheFileRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepPositionsRequest" field.</summary>
    public const int StepPositionsRequestFieldNumber = 28;
    private global::Gauge.Messages.StepPositionsRequest stepPositionsRequest_;
    /// <summary>
    //// [StepPositionsRequest](#gauge.messages.StepPositionsRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepPositionsRequest StepPositionsRequest {
      get { return stepPositionsRequest_; }
      set {
        stepPositionsRequest_ = value;
      }
    }

    /// <summary>Field number for the "stepPositionsResponse" field.</summary>
    public const int StepPositionsResponseFieldNumber = 29;
    private global::Gauge.Messages.StepPositionsResponse stepPositionsResponse_;
    /// <summary>
    //// [StepPositionsResponse](#gauge.messages.StepPositionsResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StepPositionsResponse StepPositionsResponse {
      get { return stepPositionsResponse_; }
      set {
        stepPositionsResponse_ = value;
      }
    }

    /// <summary>Field number for the "implementationFileListRequest" field.</summary>
    public const int ImplementationFileListRequestFieldNumber = 30;
    private global::Gauge.Messages.ImplementationFileListRequest implementationFileListRequest_;
    /// <summary>
    //// [ImplementationFileListRequest](#gauge.messages.ImplementationFileListRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ImplementationFileListRequest ImplementationFileListRequest {
      get { return implementationFileListRequest_; }
      set {
        implementationFileListRequest_ = value;
      }
    }

    /// <summary>Field number for the "implementationFileListResponse" field.</summary>
    public const int ImplementationFileListResponseFieldNumber = 31;
    private global::Gauge.Messages.ImplementationFileListResponse implementationFileListResponse_;
    /// <summary>
    //// [ImplementationFileListResponse](#gauge.messages.ImplementationFileListResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ImplementationFileListResponse ImplementationFileListResponse {
      get { return implementationFileListResponse_; }
      set {
        implementationFileListResponse_ = value;
      }
    }

    /// <summary>Field number for the "stubImplementationCodeRequest" field.</summary>
    public const int StubImplementationCodeRequestFieldNumber = 32;
    private global::Gauge.Messages.StubImplementationCodeRequest stubImplementationCodeRequest_;
    /// <summary>
    //// [StubImplementationCodeRequest](#gauge.messages.StubImplementationCodeRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.StubImplementationCodeRequest StubImplementationCodeRequest {
      get { return stubImplementationCodeRequest_; }
      set {
        stubImplementationCodeRequest_ = value;
      }
    }

    /// <summary>Field number for the "fileDiff" field.</summary>
    public const int FileDiffFieldNumber = 33;
    private global::Gauge.Messages.FileDiff fileDiff_;
    /// <summary>
    //// [FileDiff](#gauge.messages.FileDiff)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.FileDiff FileDiff {
      get { return fileDiff_; }
      set {
        fileDiff_ = value;
      }
    }

    /// <summary>Field number for the "implementationFileGlobPatternRequest" field.</summary>
    public const int ImplementationFileGlobPatternRequestFieldNumber = 34;
    private global::Gauge.Messages.ImplementationFileGlobPatternRequest implementationFileGlobPatternRequest_;
    /// <summary>
    //// [ImplementationFileGlobPatternRequest](#gauge.messages.ImplementationFileGlobPatternRequest)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ImplementationFileGlobPatternRequest ImplementationFileGlobPatternRequest {
      get { return implementationFileGlobPatternRequest_; }
      set {
        implementationFileGlobPatternRequest_ = value;
      }
    }

    /// <summary>Field number for the "implementationFileGlobPatternResponse" field.</summary>
    public const int ImplementationFileGlobPatternResponseFieldNumber = 35;
    private global::Gauge.Messages.ImplementationFileGlobPatternResponse implementationFileGlobPatternResponse_;
    /// <summary>
    //// [ImplementationFileGlobPatternResponse](#gauge.messages.ImplementationFileGlobPatternResponse)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gauge.Messages.ImplementationFileGlobPatternResponse ImplementationFileGlobPatternResponse {
      get { return implementationFileGlobPatternResponse_; }
      set {
        implementationFileGlobPatternResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(ExecutionStartingRequest, other.ExecutionStartingRequest)) return false;
      if (!object.Equals(SpecExecutionStartingRequest, other.SpecExecutionStartingRequest)) return false;
      if (!object.Equals(SpecExecutionEndingRequest, other.SpecExecutionEndingRequest)) return false;
      if (!object.Equals(ScenarioExecutionStartingRequest, other.ScenarioExecutionStartingRequest)) return false;
      if (!object.Equals(ScenarioExecutionEndingRequest, other.ScenarioExecutionEndingRequest)) return false;
      if (!object.Equals(StepExecutionStartingRequest, other.StepExecutionStartingRequest)) return false;
      if (!object.Equals(StepExecutionEndingRequest, other.StepExecutionEndingRequest)) return false;
      if (!object.Equals(ExecuteStepRequest, other.ExecuteStepRequest)) return false;
      if (!object.Equals(ExecutionEndingRequest, other.ExecutionEndingRequest)) return false;
      if (!object.Equals(StepValidateRequest, other.StepValidateRequest)) return false;
      if (!object.Equals(StepValidateResponse, other.StepValidateResponse)) return false;
      if (!object.Equals(ExecutionStatusResponse, other.ExecutionStatusResponse)) return false;
      if (!object.Equals(StepNamesRequest, other.StepNamesRequest)) return false;
      if (!object.Equals(StepNamesResponse, other.StepNamesResponse)) return false;
      if (!object.Equals(SuiteExecutionResult, other.SuiteExecutionResult)) return false;
      if (!object.Equals(KillProcessRequest, other.KillProcessRequest)) return false;
      if (!object.Equals(ScenarioDataStoreInitRequest, other.ScenarioDataStoreInitRequest)) return false;
      if (!object.Equals(SpecDataStoreInitRequest, other.SpecDataStoreInitRequest)) return false;
      if (!object.Equals(SuiteDataStoreInitRequest, other.SuiteDataStoreInitRequest)) return false;
      if (!object.Equals(StepNameRequest, other.StepNameRequest)) return false;
      if (!object.Equals(StepNameResponse, other.StepNameResponse)) return false;
      if (!object.Equals(RefactorRequest, other.RefactorRequest)) return false;
      if (!object.Equals(RefactorResponse, other.RefactorResponse)) return false;
      if (!object.Equals(UnsupportedMessageResponse, other.UnsupportedMessageResponse)) return false;
      if (!object.Equals(CacheFileRequest, other.CacheFileRequest)) return false;
      if (!object.Equals(StepPositionsRequest, other.StepPositionsRequest)) return false;
      if (!object.Equals(StepPositionsResponse, other.StepPositionsResponse)) return false;
      if (!object.Equals(ImplementationFileListRequest, other.ImplementationFileListRequest)) return false;
      if (!object.Equals(ImplementationFileListResponse, other.ImplementationFileListResponse)) return false;
      if (!object.Equals(StubImplementationCodeRequest, other.StubImplementationCodeRequest)) return false;
      if (!object.Equals(FileDiff, other.FileDiff)) return false;
      if (!object.Equals(ImplementationFileGlobPatternRequest, other.ImplementationFileGlobPatternRequest)) return false;
      if (!object.Equals(ImplementationFileGlobPatternResponse, other.ImplementationFileGlobPatternResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (MessageId != 0L) hash ^= MessageId.GetHashCode();
      if (executionStartingRequest_ != null) hash ^= ExecutionStartingRequest.GetHashCode();
      if (specExecutionStartingRequest_ != null) hash ^= SpecExecutionStartingRequest.GetHashCode();
      if (specExecutionEndingRequest_ != null) hash ^= SpecExecutionEndingRequest.GetHashCode();
      if (scenarioExecutionStartingRequest_ != null) hash ^= ScenarioExecutionStartingRequest.GetHashCode();
      if (scenarioExecutionEndingRequest_ != null) hash ^= ScenarioExecutionEndingRequest.GetHashCode();
      if (stepExecutionStartingRequest_ != null) hash ^= StepExecutionStartingRequest.GetHashCode();
      if (stepExecutionEndingRequest_ != null) hash ^= StepExecutionEndingRequest.GetHashCode();
      if (executeStepRequest_ != null) hash ^= ExecuteStepRequest.GetHashCode();
      if (executionEndingRequest_ != null) hash ^= ExecutionEndingRequest.GetHashCode();
      if (stepValidateRequest_ != null) hash ^= StepValidateRequest.GetHashCode();
      if (stepValidateResponse_ != null) hash ^= StepValidateResponse.GetHashCode();
      if (executionStatusResponse_ != null) hash ^= ExecutionStatusResponse.GetHashCode();
      if (stepNamesRequest_ != null) hash ^= StepNamesRequest.GetHashCode();
      if (stepNamesResponse_ != null) hash ^= StepNamesResponse.GetHashCode();
      if (suiteExecutionResult_ != null) hash ^= SuiteExecutionResult.GetHashCode();
      if (killProcessRequest_ != null) hash ^= KillProcessRequest.GetHashCode();
      if (scenarioDataStoreInitRequest_ != null) hash ^= ScenarioDataStoreInitRequest.GetHashCode();
      if (specDataStoreInitRequest_ != null) hash ^= SpecDataStoreInitRequest.GetHashCode();
      if (suiteDataStoreInitRequest_ != null) hash ^= SuiteDataStoreInitRequest.GetHashCode();
      if (stepNameRequest_ != null) hash ^= StepNameRequest.GetHashCode();
      if (stepNameResponse_ != null) hash ^= StepNameResponse.GetHashCode();
      if (refactorRequest_ != null) hash ^= RefactorRequest.GetHashCode();
      if (refactorResponse_ != null) hash ^= RefactorResponse.GetHashCode();
      if (unsupportedMessageResponse_ != null) hash ^= UnsupportedMessageResponse.GetHashCode();
      if (cacheFileRequest_ != null) hash ^= CacheFileRequest.GetHashCode();
      if (stepPositionsRequest_ != null) hash ^= StepPositionsRequest.GetHashCode();
      if (stepPositionsResponse_ != null) hash ^= StepPositionsResponse.GetHashCode();
      if (implementationFileListRequest_ != null) hash ^= ImplementationFileListRequest.GetHashCode();
      if (implementationFileListResponse_ != null) hash ^= ImplementationFileListResponse.GetHashCode();
      if (stubImplementationCodeRequest_ != null) hash ^= StubImplementationCodeRequest.GetHashCode();
      if (fileDiff_ != null) hash ^= FileDiff.GetHashCode();
      if (implementationFileGlobPatternRequest_ != null) hash ^= ImplementationFileGlobPatternRequest.GetHashCode();
      if (implementationFileGlobPatternResponse_ != null) hash ^= ImplementationFileGlobPatternResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (MessageId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MessageId);
      }
      if (executionStartingRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExecutionStartingRequest);
      }
      if (specExecutionStartingRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SpecExecutionStartingRequest);
      }
      if (specExecutionEndingRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpecExecutionEndingRequest);
      }
      if (scenarioExecutionStartingRequest_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ScenarioExecutionStartingRequest);
      }
      if (scenarioExecutionEndingRequest_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ScenarioExecutionEndingRequest);
      }
      if (stepExecutionStartingRequest_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StepExecutionStartingRequest);
      }
      if (stepExecutionEndingRequest_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(StepExecutionEndingRequest);
      }
      if (executeStepRequest_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExecuteStepRequest);
      }
      if (executionEndingRequest_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExecutionEndingRequest);
      }
      if (stepValidateRequest_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StepValidateRequest);
      }
      if (stepValidateResponse_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StepValidateResponse);
      }
      if (executionStatusResponse_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ExecutionStatusResponse);
      }
      if (stepNamesRequest_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(StepNamesRequest);
      }
      if (stepNamesResponse_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(StepNamesResponse);
      }
      if (suiteExecutionResult_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SuiteExecutionResult);
      }
      if (killProcessRequest_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(KillProcessRequest);
      }
      if (scenarioDataStoreInitRequest_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ScenarioDataStoreInitRequest);
      }
      if (specDataStoreInitRequest_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(SpecDataStoreInitRequest);
      }
      if (suiteDataStoreInitRequest_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(SuiteDataStoreInitRequest);
      }
      if (stepNameRequest_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(StepNameRequest);
      }
      if (stepNameResponse_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(StepNameResponse);
      }
      if (refactorRequest_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RefactorRequest);
      }
      if (refactorResponse_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(RefactorResponse);
      }
      if (unsupportedMessageResponse_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(UnsupportedMessageResponse);
      }
      if (cacheFileRequest_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CacheFileRequest);
      }
      if (stepPositionsRequest_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(StepPositionsRequest);
      }
      if (stepPositionsResponse_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(StepPositionsResponse);
      }
      if (implementationFileListRequest_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ImplementationFileListRequest);
      }
      if (implementationFileListResponse_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(ImplementationFileListResponse);
      }
      if (stubImplementationCodeRequest_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(StubImplementationCodeRequest);
      }
      if (fileDiff_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(FileDiff);
      }
      if (implementationFileGlobPatternRequest_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ImplementationFileGlobPatternRequest);
      }
      if (implementationFileGlobPatternResponse_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(ImplementationFileGlobPatternResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (MessageId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageId);
      }
      if (executionStartingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionStartingRequest);
      }
      if (specExecutionStartingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecExecutionStartingRequest);
      }
      if (specExecutionEndingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecExecutionEndingRequest);
      }
      if (scenarioExecutionStartingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScenarioExecutionStartingRequest);
      }
      if (scenarioExecutionEndingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScenarioExecutionEndingRequest);
      }
      if (stepExecutionStartingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StepExecutionStartingRequest);
      }
      if (stepExecutionEndingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StepExecutionEndingRequest);
      }
      if (executeStepRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecuteStepRequest);
      }
      if (executionEndingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionEndingRequest);
      }
      if (stepValidateRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StepValidateRequest);
      }
      if (stepValidateResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StepValidateResponse);
      }
      if (executionStatusResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionStatusResponse);
      }
      if (stepNamesRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StepNamesRequest);
      }
      if (stepNamesResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StepNamesResponse);
      }
      if (suiteExecutionResult_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SuiteExecutionResult);
      }
      if (killProcessRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(KillProcessRequest);
      }
      if (scenarioDataStoreInitRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ScenarioDataStoreInitRequest);
      }
      if (specDataStoreInitRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SpecDataStoreInitRequest);
      }
      if (suiteDataStoreInitRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SuiteDataStoreInitRequest);
      }
      if (stepNameRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StepNameRequest);
      }
      if (stepNameResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StepNameResponse);
      }
      if (refactorRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RefactorRequest);
      }
      if (refactorResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RefactorResponse);
      }
      if (unsupportedMessageResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnsupportedMessageResponse);
      }
      if (cacheFileRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CacheFileRequest);
      }
      if (stepPositionsRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StepPositionsRequest);
      }
      if (stepPositionsResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StepPositionsResponse);
      }
      if (implementationFileListRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ImplementationFileListRequest);
      }
      if (implementationFileListResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ImplementationFileListResponse);
      }
      if (stubImplementationCodeRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StubImplementationCodeRequest);
      }
      if (fileDiff_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FileDiff);
      }
      if (implementationFileGlobPatternRequest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ImplementationFileGlobPatternRequest);
      }
      if (implementationFileGlobPatternResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ImplementationFileGlobPatternResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.MessageId != 0L) {
        MessageId = other.MessageId;
      }
      if (other.executionStartingRequest_ != null) {
        if (executionStartingRequest_ == null) {
          executionStartingRequest_ = new global::Gauge.Messages.ExecutionStartingRequest();
        }
        ExecutionStartingRequest.MergeFrom(other.ExecutionStartingRequest);
      }
      if (other.specExecutionStartingRequest_ != null) {
        if (specExecutionStartingRequest_ == null) {
          specExecutionStartingRequest_ = new global::Gauge.Messages.SpecExecutionStartingRequest();
        }
        SpecExecutionStartingRequest.MergeFrom(other.SpecExecutionStartingRequest);
      }
      if (other.specExecutionEndingRequest_ != null) {
        if (specExecutionEndingRequest_ == null) {
          specExecutionEndingRequest_ = new global::Gauge.Messages.SpecExecutionEndingRequest();
        }
        SpecExecutionEndingRequest.MergeFrom(other.SpecExecutionEndingRequest);
      }
      if (other.scenarioExecutionStartingRequest_ != null) {
        if (scenarioExecutionStartingRequest_ == null) {
          scenarioExecutionStartingRequest_ = new global::Gauge.Messages.ScenarioExecutionStartingRequest();
        }
        ScenarioExecutionStartingRequest.MergeFrom(other.ScenarioExecutionStartingRequest);
      }
      if (other.scenarioExecutionEndingRequest_ != null) {
        if (scenarioExecutionEndingRequest_ == null) {
          scenarioExecutionEndingRequest_ = new global::Gauge.Messages.ScenarioExecutionEndingRequest();
        }
        ScenarioExecutionEndingRequest.MergeFrom(other.ScenarioExecutionEndingRequest);
      }
      if (other.stepExecutionStartingRequest_ != null) {
        if (stepExecutionStartingRequest_ == null) {
          stepExecutionStartingRequest_ = new global::Gauge.Messages.StepExecutionStartingRequest();
        }
        StepExecutionStartingRequest.MergeFrom(other.StepExecutionStartingRequest);
      }
      if (other.stepExecutionEndingRequest_ != null) {
        if (stepExecutionEndingRequest_ == null) {
          stepExecutionEndingRequest_ = new global::Gauge.Messages.StepExecutionEndingRequest();
        }
        StepExecutionEndingRequest.MergeFrom(other.StepExecutionEndingRequest);
      }
      if (other.executeStepRequest_ != null) {
        if (executeStepRequest_ == null) {
          executeStepRequest_ = new global::Gauge.Messages.ExecuteStepRequest();
        }
        ExecuteStepRequest.MergeFrom(other.ExecuteStepRequest);
      }
      if (other.executionEndingRequest_ != null) {
        if (executionEndingRequest_ == null) {
          executionEndingRequest_ = new global::Gauge.Messages.ExecutionEndingRequest();
        }
        ExecutionEndingRequest.MergeFrom(other.ExecutionEndingRequest);
      }
      if (other.stepValidateRequest_ != null) {
        if (stepValidateRequest_ == null) {
          stepValidateRequest_ = new global::Gauge.Messages.StepValidateRequest();
        }
        StepValidateRequest.MergeFrom(other.StepValidateRequest);
      }
      if (other.stepValidateResponse_ != null) {
        if (stepValidateResponse_ == null) {
          stepValidateResponse_ = new global::Gauge.Messages.StepValidateResponse();
        }
        StepValidateResponse.MergeFrom(other.StepValidateResponse);
      }
      if (other.executionStatusResponse_ != null) {
        if (executionStatusResponse_ == null) {
          executionStatusResponse_ = new global::Gauge.Messages.ExecutionStatusResponse();
        }
        ExecutionStatusResponse.MergeFrom(other.ExecutionStatusResponse);
      }
      if (other.stepNamesRequest_ != null) {
        if (stepNamesRequest_ == null) {
          stepNamesRequest_ = new global::Gauge.Messages.StepNamesRequest();
        }
        StepNamesRequest.MergeFrom(other.StepNamesRequest);
      }
      if (other.stepNamesResponse_ != null) {
        if (stepNamesResponse_ == null) {
          stepNamesResponse_ = new global::Gauge.Messages.StepNamesResponse();
        }
        StepNamesResponse.MergeFrom(other.StepNamesResponse);
      }
      if (other.suiteExecutionResult_ != null) {
        if (suiteExecutionResult_ == null) {
          suiteExecutionResult_ = new global::Gauge.Messages.SuiteExecutionResult();
        }
        SuiteExecutionResult.MergeFrom(other.SuiteExecutionResult);
      }
      if (other.killProcessRequest_ != null) {
        if (killProcessRequest_ == null) {
          killProcessRequest_ = new global::Gauge.Messages.KillProcessRequest();
        }
        KillProcessRequest.MergeFrom(other.KillProcessRequest);
      }
      if (other.scenarioDataStoreInitRequest_ != null) {
        if (scenarioDataStoreInitRequest_ == null) {
          scenarioDataStoreInitRequest_ = new global::Gauge.Messages.ScenarioDataStoreInitRequest();
        }
        ScenarioDataStoreInitRequest.MergeFrom(other.ScenarioDataStoreInitRequest);
      }
      if (other.specDataStoreInitRequest_ != null) {
        if (specDataStoreInitRequest_ == null) {
          specDataStoreInitRequest_ = new global::Gauge.Messages.SpecDataStoreInitRequest();
        }
        SpecDataStoreInitRequest.MergeFrom(other.SpecDataStoreInitRequest);
      }
      if (other.suiteDataStoreInitRequest_ != null) {
        if (suiteDataStoreInitRequest_ == null) {
          suiteDataStoreInitRequest_ = new global::Gauge.Messages.SuiteDataStoreInitRequest();
        }
        SuiteDataStoreInitRequest.MergeFrom(other.SuiteDataStoreInitRequest);
      }
      if (other.stepNameRequest_ != null) {
        if (stepNameRequest_ == null) {
          stepNameRequest_ = new global::Gauge.Messages.StepNameRequest();
        }
        StepNameRequest.MergeFrom(other.StepNameRequest);
      }
      if (other.stepNameResponse_ != null) {
        if (stepNameResponse_ == null) {
          stepNameResponse_ = new global::Gauge.Messages.StepNameResponse();
        }
        StepNameResponse.MergeFrom(other.StepNameResponse);
      }
      if (other.refactorRequest_ != null) {
        if (refactorRequest_ == null) {
          refactorRequest_ = new global::Gauge.Messages.RefactorRequest();
        }
        RefactorRequest.MergeFrom(other.RefactorRequest);
      }
      if (other.refactorResponse_ != null) {
        if (refactorResponse_ == null) {
          refactorResponse_ = new global::Gauge.Messages.RefactorResponse();
        }
        RefactorResponse.MergeFrom(other.RefactorResponse);
      }
      if (other.unsupportedMessageResponse_ != null) {
        if (unsupportedMessageResponse_ == null) {
          unsupportedMessageResponse_ = new global::Gauge.Messages.UnsupportedMessageResponse();
        }
        UnsupportedMessageResponse.MergeFrom(other.UnsupportedMessageResponse);
      }
      if (other.cacheFileRequest_ != null) {
        if (cacheFileRequest_ == null) {
          cacheFileRequest_ = new global::Gauge.Messages.CacheFileRequest();
        }
        CacheFileRequest.MergeFrom(other.CacheFileRequest);
      }
      if (other.stepPositionsRequest_ != null) {
        if (stepPositionsRequest_ == null) {
          stepPositionsRequest_ = new global::Gauge.Messages.StepPositionsRequest();
        }
        StepPositionsRequest.MergeFrom(other.StepPositionsRequest);
      }
      if (other.stepPositionsResponse_ != null) {
        if (stepPositionsResponse_ == null) {
          stepPositionsResponse_ = new global::Gauge.Messages.StepPositionsResponse();
        }
        StepPositionsResponse.MergeFrom(other.StepPositionsResponse);
      }
      if (other.implementationFileListRequest_ != null) {
        if (implementationFileListRequest_ == null) {
          implementationFileListRequest_ = new global::Gauge.Messages.ImplementationFileListRequest();
        }
        ImplementationFileListRequest.MergeFrom(other.ImplementationFileListRequest);
      }
      if (other.implementationFileListResponse_ != null) {
        if (implementationFileListResponse_ == null) {
          implementationFileListResponse_ = new global::Gauge.Messages.ImplementationFileListResponse();
        }
        ImplementationFileListResponse.MergeFrom(other.ImplementationFileListResponse);
      }
      if (other.stubImplementationCodeRequest_ != null) {
        if (stubImplementationCodeRequest_ == null) {
          stubImplementationCodeRequest_ = new global::Gauge.Messages.StubImplementationCodeRequest();
        }
        StubImplementationCodeRequest.MergeFrom(other.StubImplementationCodeRequest);
      }
      if (other.fileDiff_ != null) {
        if (fileDiff_ == null) {
          fileDiff_ = new global::Gauge.Messages.FileDiff();
        }
        FileDiff.MergeFrom(other.FileDiff);
      }
      if (other.implementationFileGlobPatternRequest_ != null) {
        if (implementationFileGlobPatternRequest_ == null) {
          implementationFileGlobPatternRequest_ = new global::Gauge.Messages.ImplementationFileGlobPatternRequest();
        }
        ImplementationFileGlobPatternRequest.MergeFrom(other.ImplementationFileGlobPatternRequest);
      }
      if (other.implementationFileGlobPatternResponse_ != null) {
        if (implementationFileGlobPatternResponse_ == null) {
          implementationFileGlobPatternResponse_ = new global::Gauge.Messages.ImplementationFileGlobPatternResponse();
        }
        ImplementationFileGlobPatternResponse.MergeFrom(other.ImplementationFileGlobPatternResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            messageType_ = (global::Gauge.Messages.Message.Types.MessageType) input.ReadEnum();
            break;
          }
          case 16: {
            MessageId = input.ReadInt64();
            break;
          }
          case 26: {
            if (executionStartingRequest_ == null) {
              executionStartingRequest_ = new global::Gauge.Messages.ExecutionStartingRequest();
            }
            input.ReadMessage(executionStartingRequest_);
            break;
          }
          case 34: {
            if (specExecutionStartingRequest_ == null) {
              specExecutionStartingRequest_ = new global::Gauge.Messages.SpecExecutionStartingRequest();
            }
            input.ReadMessage(specExecutionStartingRequest_);
            break;
          }
          case 42: {
            if (specExecutionEndingRequest_ == null) {
              specExecutionEndingRequest_ = new global::Gauge.Messages.SpecExecutionEndingRequest();
            }
            input.ReadMessage(specExecutionEndingRequest_);
            break;
          }
          case 50: {
            if (scenarioExecutionStartingRequest_ == null) {
              scenarioExecutionStartingRequest_ = new global::Gauge.Messages.ScenarioExecutionStartingRequest();
            }
            input.ReadMessage(scenarioExecutionStartingRequest_);
            break;
          }
          case 58: {
            if (scenarioExecutionEndingRequest_ == null) {
              scenarioExecutionEndingRequest_ = new global::Gauge.Messages.ScenarioExecutionEndingRequest();
            }
            input.ReadMessage(scenarioExecutionEndingRequest_);
            break;
          }
          case 66: {
            if (stepExecutionStartingRequest_ == null) {
              stepExecutionStartingRequest_ = new global::Gauge.Messages.StepExecutionStartingRequest();
            }
            input.ReadMessage(stepExecutionStartingRequest_);
            break;
          }
          case 74: {
            if (stepExecutionEndingRequest_ == null) {
              stepExecutionEndingRequest_ = new global::Gauge.Messages.StepExecutionEndingRequest();
            }
            input.ReadMessage(stepExecutionEndingRequest_);
            break;
          }
          case 82: {
            if (executeStepRequest_ == null) {
              executeStepRequest_ = new global::Gauge.Messages.ExecuteStepRequest();
            }
            input.ReadMessage(executeStepRequest_);
            break;
          }
          case 90: {
            if (executionEndingRequest_ == null) {
              executionEndingRequest_ = new global::Gauge.Messages.ExecutionEndingRequest();
            }
            input.ReadMessage(executionEndingRequest_);
            break;
          }
          case 98: {
            if (stepValidateRequest_ == null) {
              stepValidateRequest_ = new global::Gauge.Messages.StepValidateRequest();
            }
            input.ReadMessage(stepValidateRequest_);
            break;
          }
          case 106: {
            if (stepValidateResponse_ == null) {
              stepValidateResponse_ = new global::Gauge.Messages.StepValidateResponse();
            }
            input.ReadMessage(stepValidateResponse_);
            break;
          }
          case 114: {
            if (executionStatusResponse_ == null) {
              executionStatusResponse_ = new global::Gauge.Messages.ExecutionStatusResponse();
            }
            input.ReadMessage(executionStatusResponse_);
            break;
          }
          case 122: {
            if (stepNamesRequest_ == null) {
              stepNamesRequest_ = new global::Gauge.Messages.StepNamesRequest();
            }
            input.ReadMessage(stepNamesRequest_);
            break;
          }
          case 130: {
            if (stepNamesResponse_ == null) {
              stepNamesResponse_ = new global::Gauge.Messages.StepNamesResponse();
            }
            input.ReadMessage(stepNamesResponse_);
            break;
          }
          case 138: {
            if (suiteExecutionResult_ == null) {
              suiteExecutionResult_ = new global::Gauge.Messages.SuiteExecutionResult();
            }
            input.ReadMessage(suiteExecutionResult_);
            break;
          }
          case 146: {
            if (killProcessRequest_ == null) {
              killProcessRequest_ = new global::Gauge.Messages.KillProcessRequest();
            }
            input.ReadMessage(killProcessRequest_);
            break;
          }
          case 154: {
            if (scenarioDataStoreInitRequest_ == null) {
              scenarioDataStoreInitRequest_ = new global::Gauge.Messages.ScenarioDataStoreInitRequest();
            }
            input.ReadMessage(scenarioDataStoreInitRequest_);
            break;
          }
          case 162: {
            if (specDataStoreInitRequest_ == null) {
              specDataStoreInitRequest_ = new global::Gauge.Messages.SpecDataStoreInitRequest();
            }
            input.ReadMessage(specDataStoreInitRequest_);
            break;
          }
          case 170: {
            if (suiteDataStoreInitRequest_ == null) {
              suiteDataStoreInitRequest_ = new global::Gauge.Messages.SuiteDataStoreInitRequest();
            }
            input.ReadMessage(suiteDataStoreInitRequest_);
            break;
          }
          case 178: {
            if (stepNameRequest_ == null) {
              stepNameRequest_ = new global::Gauge.Messages.StepNameRequest();
            }
            input.ReadMessage(stepNameRequest_);
            break;
          }
          case 186: {
            if (stepNameResponse_ == null) {
              stepNameResponse_ = new global::Gauge.Messages.StepNameResponse();
            }
            input.ReadMessage(stepNameResponse_);
            break;
          }
          case 194: {
            if (refactorRequest_ == null) {
              refactorRequest_ = new global::Gauge.Messages.RefactorRequest();
            }
            input.ReadMessage(refactorRequest_);
            break;
          }
          case 202: {
            if (refactorResponse_ == null) {
              refactorResponse_ = new global::Gauge.Messages.RefactorResponse();
            }
            input.ReadMessage(refactorResponse_);
            break;
          }
          case 210: {
            if (unsupportedMessageResponse_ == null) {
              unsupportedMessageResponse_ = new global::Gauge.Messages.UnsupportedMessageResponse();
            }
            input.ReadMessage(unsupportedMessageResponse_);
            break;
          }
          case 218: {
            if (cacheFileRequest_ == null) {
              cacheFileRequest_ = new global::Gauge.Messages.CacheFileRequest();
            }
            input.ReadMessage(cacheFileRequest_);
            break;
          }
          case 226: {
            if (stepPositionsRequest_ == null) {
              stepPositionsRequest_ = new global::Gauge.Messages.StepPositionsRequest();
            }
            input.ReadMessage(stepPositionsRequest_);
            break;
          }
          case 234: {
            if (stepPositionsResponse_ == null) {
              stepPositionsResponse_ = new global::Gauge.Messages.StepPositionsResponse();
            }
            input.ReadMessage(stepPositionsResponse_);
            break;
          }
          case 242: {
            if (implementationFileListRequest_ == null) {
              implementationFileListRequest_ = new global::Gauge.Messages.ImplementationFileListRequest();
            }
            input.ReadMessage(implementationFileListRequest_);
            break;
          }
          case 250: {
            if (implementationFileListResponse_ == null) {
              implementationFileListResponse_ = new global::Gauge.Messages.ImplementationFileListResponse();
            }
            input.ReadMessage(implementationFileListResponse_);
            break;
          }
          case 258: {
            if (stubImplementationCodeRequest_ == null) {
              stubImplementationCodeRequest_ = new global::Gauge.Messages.StubImplementationCodeRequest();
            }
            input.ReadMessage(stubImplementationCodeRequest_);
            break;
          }
          case 266: {
            if (fileDiff_ == null) {
              fileDiff_ = new global::Gauge.Messages.FileDiff();
            }
            input.ReadMessage(fileDiff_);
            break;
          }
          case 274: {
            if (implementationFileGlobPatternRequest_ == null) {
              implementationFileGlobPatternRequest_ = new global::Gauge.Messages.ImplementationFileGlobPatternRequest();
            }
            input.ReadMessage(implementationFileGlobPatternRequest_);
            break;
          }
          case 282: {
            if (implementationFileGlobPatternResponse_ == null) {
              implementationFileGlobPatternResponse_ = new global::Gauge.Messages.ImplementationFileGlobPatternResponse();
            }
            input.ReadMessage(implementationFileGlobPatternResponse_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Message message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MessageType {
        [pbr::OriginalName("ExecutionStarting")] ExecutionStarting = 0,
        [pbr::OriginalName("SpecExecutionStarting")] SpecExecutionStarting = 1,
        [pbr::OriginalName("SpecExecutionEnding")] SpecExecutionEnding = 2,
        [pbr::OriginalName("ScenarioExecutionStarting")] ScenarioExecutionStarting = 3,
        [pbr::OriginalName("ScenarioExecutionEnding")] ScenarioExecutionEnding = 4,
        [pbr::OriginalName("StepExecutionStarting")] StepExecutionStarting = 5,
        [pbr::OriginalName("StepExecutionEnding")] StepExecutionEnding = 6,
        [pbr::OriginalName("ExecuteStep")] ExecuteStep = 7,
        [pbr::OriginalName("ExecutionEnding")] ExecutionEnding = 8,
        [pbr::OriginalName("StepValidateRequest")] StepValidateRequest = 9,
        [pbr::OriginalName("StepValidateResponse")] StepValidateResponse = 10,
        [pbr::OriginalName("ExecutionStatusResponse")] ExecutionStatusResponse = 11,
        [pbr::OriginalName("StepNamesRequest")] StepNamesRequest = 12,
        [pbr::OriginalName("StepNamesResponse")] StepNamesResponse = 13,
        [pbr::OriginalName("KillProcessRequest")] KillProcessRequest = 14,
        [pbr::OriginalName("SuiteExecutionResult")] SuiteExecutionResult = 15,
        [pbr::OriginalName("ScenarioDataStoreInit")] ScenarioDataStoreInit = 16,
        [pbr::OriginalName("SpecDataStoreInit")] SpecDataStoreInit = 17,
        [pbr::OriginalName("SuiteDataStoreInit")] SuiteDataStoreInit = 18,
        [pbr::OriginalName("StepNameRequest")] StepNameRequest = 19,
        [pbr::OriginalName("StepNameResponse")] StepNameResponse = 20,
        [pbr::OriginalName("RefactorRequest")] RefactorRequest = 21,
        [pbr::OriginalName("RefactorResponse")] RefactorResponse = 22,
        [pbr::OriginalName("UnsupportedMessageResponse")] UnsupportedMessageResponse = 23,
        [pbr::OriginalName("CacheFileRequest")] CacheFileRequest = 24,
        [pbr::OriginalName("StepPositionsRequest")] StepPositionsRequest = 25,
        [pbr::OriginalName("StepPositionsResponse")] StepPositionsResponse = 26,
        [pbr::OriginalName("ImplementationFileListRequest")] ImplementationFileListRequest = 27,
        [pbr::OriginalName("ImplementationFileListResponse")] ImplementationFileListResponse = 28,
        [pbr::OriginalName("StubImplementationCodeRequest")] StubImplementationCodeRequest = 29,
        [pbr::OriginalName("FileDiff")] FileDiff = 30,
        [pbr::OriginalName("ImplementationFileGlobPatternRequest")] ImplementationFileGlobPatternRequest = 31,
        [pbr::OriginalName("ImplementationFileGlobPatternResponse")] ImplementationFileGlobPatternResponse = 32,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
